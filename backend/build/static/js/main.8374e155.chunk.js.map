{"version":3,"sources":["assets/Logo2.PNG","services/auth-header.js","services/auth.service.js","RegisterAndLoginPages/login.component.js","RegisterAndLoginPages/register.component.js","services/user.service.js","OtherCommonPages/home.component.js","OtherCommonPages/profile.component.js","OtherCommonPages/board-user.component.js","services/business.service.js","BusinessPage/board-business.component.js","services/admin.service.js","AdminPage/board-admin.component.js","OtherCommonPages/confirmation.component.js","CoursePage/PaypalButton.js","CoursePage/CourseDetail.js","CoursePage/CourseTile.js","CoursePage/CourseList.js","CoursePage/CategoryTile.js","CoursePage/CategoryList.js","CoursePage/Courses.js","AdminPage/CourseApplicationList.js","AdminPage/AdminCourseApproval.js","AdminPage/BusinessApplicationList.js","AdminPage/AdminBusinessApproval.js","BusinessRegistrationPage/BusinessRegistration.js","services/course.service.js","BusinessPage/BusinessUploadCourse.js","BusinessPage/BusinessCourseDetail.js","AdminPage/AdminPage-BusinessDetail.js","AdminPage/AdminPage-BusinessCourseDetail.js","App.js","index.js"],"names":["module","exports","authHeader","user","JSON","parse","localStorage","getItem","accessToken","API_URL","username","password","axios","post","then","response","data","setItem","stringify","removeItem","email","get","headers","token","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","id","businessStructure","businessName","ABN","TFN","RGSTStatus","PII","PLI","address","phone","website","description","header","userId","courseId","cost","payerId","orderId","console","log","Home","content","UserService","getPublicContent","Carousel","Item","Caption","color","logo","Profile","currentUser","getCurrentUser","substring","substr","roles","map","index","key","BoardUser","getUserBoard","genres","title","selectedFacilitator","startDate","endDate","startTime","endTime","selecteddays","selectedfrequency","address1","address2","city","zip","maxMembers","minMembers","BoardFacilitator","business","_id","courses","BusinessService","getBusinessCourses","Button","variant","onClick","href","course","to","facilitator","Date","toISOString","replace","split","concat","toLocaleString","hour","minute","repeatDay","join","compare","a","b","toUpperCase","BoardAdmin","courseApplications","businesses","AdminService","getBusinessAccounts","sort","CardGroup","Card","width","Body","Title","Text","PayPalButton","PaypalButton","createOrder","actions","order","create","purchase_units","amount","currency_code","onApprove","capture","details","paymentData","payerID","orderID","enrollCourse","status","refreshCurrentUser","showButtons","paid","failed","catch","React","ReactDOM","isScriptLoaded","isScriptLoadSucceed","paypal","Buttons","driver","nextProps","scriptLoader","CourseDetail","showPaypalButtons","showPaypal","match","params","count","ID","button","courseEnrolledIn","includes","height","float","postCode","alignItems","justifyContent","CourseTile","category","fontSize","fontWeight","CourseList","imgUrl","courseIds","getCourses","forEach","CategoryTile","CategoryList","categories","individualCategory","Courses","CourseApplicationList","approveCourseApplication","getApplications","denyCourseApplication","getCourseApplications","Array","from","singleCourse","Accordion","defaultActiveKey","Header","Toggle","as","eventKey","deny","approve","Collapse","createdAt","AdminCourseApproval","BusinessApplicationList","approveBusinessApplication","denyBusinessApplication","getBusinessApplications","decriptionOfBusiness","registeredGST","professionalIndemnityInsurance","publicLiabilityInsurance","businessAddress","styleOfCourse","refereeContacts","facilitators","AdminBusinessApproval","show","BusinessRegistration","genre","genreList","image","ABNStatus","TFNStatus","RGST","PIIStatus","PLIStatus","errors","handleSubmit","onChangeBusinessName","onChangeBusinessStructure","onChangeDescription","onChangeGenre","onChangeImage","onChangeAddress1","onChangeAddress2","onChangeAddressCity","onChangeAddressState","onChangeAddressZip","onChangePhone","onChangeWebsite","onChangeABN","onClickABN","onChangeTFN","onClickTFN","onChangeRGST","onClickRGST","onChangePII","onClickPII","onChangePLI","onClickPLI","formIsValid","test","handleValidation","registerBusiness","Form","Group","Label","Control","placeholder","File","Row","Col","Check","selected","label","BusinessUploadCourse","historyCourses","intervalDescription","days","frequency","facilitatorList","plwf","mif","consf","priorSkillset","tcs","onChangeTitle","onChangeStartDate","onChangeendDate","onChangeStartTime","onChangeEndTime","onChangeIntervalDescription","onChangeMaxMembers","onChangeminMembers","onChangeCost","onClickPlwf","onClickMif","onClickConsf","onChangeSkillset","onClickTcs","onChangeFacilitator","onChangefrequency","onChangedays","handleClose","handleShow","CourseService","getHistoryCourses","date","uploadCourse","Modal","onHide","closeButton","Table","handleImport","Footer","multiple","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","x","readOnly","compareUsername","BusinessCourseDetail","getBusinessOneCourse","enrolledMembers","member","getBusinessCoursesInAdminPage","accountId","getBusinessOneCourseInAdminPage","App","logOut","showFacilitatorBoard","showAdminBoard","undefined","logout","exact","path","component","AdminApproval","AdminPageBusinessDetail","AdminPageBusinessCourseDetail","render","document","getElementById"],"mappings":"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","file":"static/js/main.8374e155.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo2.9079eb21.PNG\";","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user && user.accessToken) {\r\n        // for Node.js Express back-end\r\n        return {'Content-Type': 'application/json',\r\n            'x-access-token': user.accessToken};\r\n    } else {\r\n        return {};\r\n    }\r\n}","import axios from \"axios\";\r\nimport authHeader from './auth-header';\r\nconst API_URL = \"https://signallingserver.us-east-2.elasticbeanstalk.com/api/auth/\";\r\n\r\nclass AuthService {\r\n    login(username, password) {\r\n        return axios\r\n            .post(API_URL + \"signin\", {\r\n                username,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    register(username, email, password) {\r\n        return axios.post(API_URL + \"signup\", {\r\n            username,\r\n            email,\r\n            password,\r\n            \"roles\":[\"user\"]\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n\r\n    refreshCurrentUser(){\r\n        return axios.get(API_URL + \"refresh\", { headers: authHeader() }).then(response => {\r\n            if (response.data.accessToken) {\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n            }\r\n\r\n            return response.data;\r\n        });\r\n    }\r\n\r\n    confirm(token) {\r\n        return axios.post(API_URL + \"confirmation\", {\r\n            token\r\n        });\r\n    }\r\n}\r\n\r\nexport default new AuthService();","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n            This field is required!\r\n        </div>\r\n    );\r\n    }\r\n};\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            loading: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleLogin(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            loading: true\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.login(this.state.username, this.state.password).then(\r\n                () => {\r\n                    this.props.history.push(\"/profile\");\r\n                    window.location.reload();\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n            <img\r\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n        alt=\"profile-img\"\r\n        className=\"profile-img-card\"\r\n            />\r\n\r\n            <Form\r\n        onSubmit={this.handleLogin}\r\n        ref={c => {\r\n            this.form = c;\r\n        }}\r\n    >\r\n    <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <Input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        name=\"username\"\r\n        value={this.state.username}\r\n        onChange={this.onChangeUsername}\r\n        validations={[required]}\r\n        />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input\r\n        type=\"password\"\r\n        className=\"form-control\"\r\n        name=\"password\"\r\n        value={this.state.password}\r\n        onChange={this.onChangePassword}\r\n        validations={[required]}\r\n        />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <button\r\n        className=\"btn btn-primary btn-block\"\r\n        disabled={this.state.loading}\r\n            >\r\n            {this.state.loading && (\r\n                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n    )}\r\n    <span>Login</span>\r\n        </button>\r\n        </div>\r\n\r\n        {this.state.message && (\r\n        <div className=\"form-group\">\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n            {this.state.message}\r\n            </div>\r\n            </div>\r\n        )}\r\n    <CheckButton\r\n        style={{ display: \"none\" }}\r\n        ref={c => {\r\n            this.checkBtn = c;\r\n        }}\r\n        />\r\n        </Form>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n            This field is required!\r\n        </div>\r\n    );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n            This is not a valid email.\r\n        </div>\r\n    );\r\n    }\r\n};\r\n\r\nconst vusername = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n            The username must be between 3 and 20 characters.\r\n        </div>\r\n    );\r\n    }\r\n};\r\n\r\nconst vpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n            The password must be between 6 and 40 characters.\r\n        </div>\r\n    );\r\n    }\r\n};\r\n\r\nexport default class Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            successful: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleRegister(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            successful: false\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.register(\r\n                this.state.username,\r\n                this.state.email,\r\n                this.state.password,\r\n            ).then(\r\n                response => {\r\n                    this.setState({\r\n                        message: response.data.message,\r\n                        successful: true\r\n                    });\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        successful: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n            <img\r\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n        alt=\"profile-img\"\r\n        className=\"profile-img-card\"\r\n            />\r\n\r\n            <Form\r\n        onSubmit={this.handleRegister}\r\n        ref={c => {\r\n            this.form = c;\r\n        }}\r\n    >\r\n        {!this.state.successful && (\r\n        <div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <Input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.onChangeUsername}\r\n            validations={[required, vusername]}\r\n            />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <Input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.onChangeEmail}\r\n            validations={[required, email]}\r\n            />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.onChangePassword}\r\n            validations={[required, vpassword]}\r\n            />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n        </div>\r\n        </div>\r\n        )}\r\n\r\n        {this.state.message && (\r\n        <div className=\"form-group\">\r\n            <div\r\n            className={\r\n                this.state.successful\r\n                    ? \"alert alert-success\"\r\n                    : \"alert alert-danger\"\r\n            }\r\n            role=\"alert\"\r\n                >\r\n                {this.state.message}\r\n                </div>\r\n                </div>\r\n        )}\r\n    <CheckButton\r\n        style={{ display: \"none\" }}\r\n        ref={c => {\r\n            this.checkBtn = c;\r\n        }}\r\n        />\r\n        </Form>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://signallingserver.us-east-2.elasticbeanstalk.com/api/';\r\n\r\nclass UserService {\r\n    getPublicContent() {\r\n        return axios.get(API_URL + 'test/all')\r\n    }\r\n\r\n    getUserBoard() {\r\n        return axios.get(API_URL + 'test/user', { headers: authHeader() });\r\n    }\r\n\r\n    registerBusiness(id,businessStructure,businessName,ABN,TFN,RGSTStatus, PII,PLI,address,phone,website,email,description) {\r\n\r\n        const data =JSON.stringify(\r\n            {\r\n                \"userId\":id,\r\n                \"businessStructure\":businessStructure,\r\n                \"businessName\":businessName,\r\n                \"ABN\":ABN,\r\n                \"TFN\":TFN,\r\n                \"registeredGST\": RGSTStatus,\r\n                \"professionalIndemnityInsurance\":PII,\r\n                \"publicLiabilityInsurance\":PLI,\r\n                \"businessAddress\":address,\r\n                \"phone\":phone,\r\n                \"website\":website,\r\n                \"email\":email,\r\n                \"logoImage\":\"url\",\r\n                \"decriptionOfBusiness\":description,\r\n                // Dummy data here, unfinished\r\n                \"styleOfCourse\":\"nostyle\",\r\n                \"refereeContacts\":\r\n                    [\r\n                        {\"name\":\"Bill\",\"phone\":\"0312333\",\"email\":\"Bill@gmail.com\",\"address\":\"secret\"}\r\n                    ],\r\n                \"facilitators\":\r\n                    [\r\n                        {\"name\":\"Bill\",\"phone\":\"0312333\",\"email\":\"Bill@gmail.com\",\"workingWithChildren\":false},\r\n                        {\"name\":\"Haowei\",\"phone\":\"0312323\",\"email\":\"Bill2@gmail.com\",\"workingWithChildren\":true}\r\n                    ]\r\n            }\r\n        );\r\n        const header={ headers: authHeader()};\r\n\r\n        return axios.post(API_URL+'user/registerBusiness',\r\n            data,\r\n            header\r\n        );\r\n    }\r\n\r\n\r\n    enrollCourse(userId,courseId,cost,payerId,orderId){\r\n        console.log(userId);\r\n        const data=JSON.stringify({\r\n            \"userId\":userId,\r\n            \"courseId\":courseId,\r\n            \"cost\":cost,\r\n            \"payerId\":payerId,\r\n            \"orderId\":orderId,\r\n        });\r\n        console.log(data);\r\n        return axios.post(API_URL + 'enroll', data, { headers: authHeader() });\r\n    }\r\n}\r\n\r\nexport default new UserService();","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport logo from \"../assets/Logo2.PNG\"\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            content: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserService.getPublicContent().then(\r\n            response => {\r\n                this.setState({\r\n                    content: response.data\r\n                });\r\n            },\r\n            error => {\r\n                this.setState({\r\n                    content:\r\n                        (error.response && error.response.data) ||\r\n                        error.message ||\r\n                        error.toString()\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n            <Carousel>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"https://picsum.photos/1000/299\"\r\n      \r\n    \r\n    />\r\n    <Carousel.Caption>\r\n      <h1 style={{color: \"lightblue\"}}>Welcome to Reboot Retreats</h1>\r\n\r\n    \r\n      \r\n      <p>Reboot Retreats offers a variety of topic driven self-help weekend immersives to help people reconnect with their passions, get unstuck, and learn self-care..</p>\r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      //src=\"https://picsum.photos/1000/300\"\r\n      src={logo} \r\n     \r\n    />\r\n\r\n    <Carousel.Caption>\r\n      \r\n      \r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n \r\n</Carousel>\r\n            </div>\r\n    );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentUser: AuthService.getCurrentUser()\r\n        };\r\n        console.log(AuthService.getCurrentUser());\r\n    }\r\n\r\n    render() {\r\n        const { currentUser } = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <header className=\"jumbotron\">\r\n            <h3>\r\n            <strong>{currentUser.username}</strong> Profile\r\n            </h3>\r\n            </header>\r\n            <p>\r\n            <strong>Token:</strong>{\" \"}\r\n        {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n        {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n    </p>\r\n        <p>\r\n        <strong>Id:</strong>{\" \"}\r\n        {currentUser.id}\r\n    </p>\r\n        <p>\r\n        <strong>Email:</strong>{\" \"}\r\n        {currentUser.email}\r\n    </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n        {currentUser.roles &&\r\n                currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n            </ul>\r\n            </div>\r\n    );\r\n    }\r\n    }","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            content: \"Space for users!\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserService.getUserBoard().then(\r\n            response => {\r\n                this.setState({\r\n                    content: response.data\r\n                });\r\n            },\r\n            error => {\r\n                this.setState({\r\n                    content:\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString()\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n            <header className=\"jumbotron\">\r\n            <h3>{this.state.content}</h3>\r\n            </header>\r\n            </div>\r\n    );\r\n    }\r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://signallingserver.us-east-2.elasticbeanstalk.com/api/business/';\r\n\r\nclass UserService {\r\n\r\n    getBusinessCourses(){\r\n        return axios.get(API_URL + 'viewCourses', { headers: authHeader() });\r\n    }\r\n    getBusinessOneCourse(courseId){\r\n        const data=JSON.stringify({\r\n            \"courseId\":courseId\r\n        });\r\n        return axios.post(API_URL + 'viewOneCourse', data, { headers: authHeader() });\r\n    }\r\n    uploadCourse(genres,title,description,selectedFacilitator,startDate,endDate,startTime,endTime,selecteddays,selectedfrequency,address1,address2,city,state,zip,maxMembers,minMembers,id,cost) {\r\n\r\n        const data =JSON.stringify({\r\n            \"category\": genres,\r\n            \"title\": title,\r\n            \"description\": description,\r\n            \"facilitator\": selectedFacilitator,\r\n            \"startDate\":startDate,\r\n            \"endDate\":endDate,\r\n            \"startTime\":startTime,\r\n            \"endTime\":endTime,\r\n            \"repeatDay\":selecteddays,\r\n            \"frequency\":selectedfrequency,\r\n\r\n            \"location\":{\r\n                \"address1\":address1,\r\n                \"address2\":address2,\r\n                \"city\":city,\r\n                \"state\":state,\r\n                \"postCode\":zip,\r\n            },\r\n            \"maxMembers\":maxMembers,\r\n            \"minMembers\":minMembers,\r\n            \"promoImage\":\"none\",\r\n            \"prerequisites\":\"none\",\r\n            \"additionalInformation\":\"none\",\r\n            \"businessId\":id,\r\n            \"cost\":cost\r\n\r\n        });\r\n\r\n        const header={ headers: authHeader()};\r\n\r\n        return axios.post(API_URL+'uploadCourse',\r\n            data,\r\n            header\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default new UserService();","import React, { Component } from \"react\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Table,Form, Button, Col, Modal } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BusinessService from \"../services/business.service\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\n\r\nexport default class BoardFacilitator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          id: AuthService.getCurrentUser().business._id,\r\n          courses: [],\r\n        };\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        BusinessService.getBusinessCourses().then(\r\n            response => {\r\n                this.setState({\r\n                    courses: response.data\r\n                });\r\n                console.log(this.state.courses);\r\n                console.log(this.state.courses.length);\r\n            },\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div>\r\n            <h1><Button variant=\"primary\" onClick={(e) => {\r\n            e.preventDefault();\r\n            window.location.href='/facilitator/uploadCourse';\r\n        }} type=\"button\">\r\n            Upload a course\r\n        </Button></h1>\r\n            </div>\r\n            <div className=\"row row-cols-1 row-cols-md-2\">\r\n            {this.state.courses.map((course) => {\r\n                    return (\r\n                        <div className=\"col mb-4\">\r\n                        <div className=\"card\">\r\n                        <img src=\"https://picsum.photos/1000/300\" alt=\"\" />\r\n                        <div className=\"card-body\">\r\n                        <h5>\r\n                        <Link to={`/facilitator/${course._id}`}>\r\n                    {course.title}\r\n                </Link>\r\n                    </h5>\r\n                    <p>\r\n                    <b>Facilitator: </b>\r\n                    {course.facilitator}\r\n                    </p>\r\n                    <p>\r\n                    <b>Date: </b>\r\n                    {new Date(course.startDate).toISOString().replace('-', '/').split('T')[0].replace('-', '/').concat(\r\n                        \" - \",\r\n                        new Date(course.endDate).toISOString().replace('-', '/').split('T')[0].replace('-', '/')\r\n                    )}\r\n                    </p>\r\n                    <p>\r\n                    <b>Time: </b>\r\n                    {new Date(course.startTime).toLocaleString([], {hour: '2-digit', minute:'2-digit'}).concat(\r\n                        \" - \",\r\n                        new Date(course.endTime).toLocaleString([], {hour: '2-digit', minute:'2-digit'})\r\n                    )}\r\n                    </p>\r\n                    <p>\r\n                    <b>Repeat Day: </b>\r\n                    {course.repeatDay.join(', ')}\r\n                    </p>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                );\r\n                })}\r\n            </div>\r\n            </div>\r\n    );\r\n    }\r\n    \r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://signallingserver.us-east-2.elasticbeanstalk.com/api/admin/';\r\n\r\nclass AdminService {\r\n\r\n\r\n    getCourseApplications(){\r\n        const header={ headers: authHeader()};\r\n\r\n        return axios.get(API_URL+'courseApplications',\r\n            header\r\n        );\r\n    }\r\n\r\n    getBusinessApplications(){\r\n        const header={ headers: authHeader()};\r\n\r\n        return axios.get(API_URL+'businessApplications',\r\n            header\r\n        );\r\n    }\r\n\r\n    approveCourseApplication(id) {\r\n\r\n        const header={ headers: authHeader()};\r\n\r\n        const data =JSON.stringify({\r\n            \"courseId\":id,\r\n            \"approve\":true\r\n        });\r\n        return axios.post(API_URL+'approveCourse',\r\n            data,\r\n            header\r\n        );\r\n    }\r\n    denyCourseApplication(id) {\r\n\r\n        const header={ headers: authHeader()};\r\n\r\n        const data =JSON.stringify({\r\n            \"courseId\":id,\r\n            \"approve\":false\r\n        });\r\n        return axios.post(API_URL+'approveCourse',\r\n            data,\r\n            header\r\n        );\r\n    }\r\n\r\n    approveBusinessApplication(id) {\r\n\r\n        const header={ headers: authHeader()};\r\n\r\n        const data =JSON.stringify({\r\n            \"userId\":id,\r\n            \"approve\":true\r\n        });\r\n        return axios.post(API_URL+'approveBusiness',\r\n            data,\r\n            header\r\n        );\r\n    }\r\n    denyBusinessApplication(id) {\r\n\r\n        const header={ headers: authHeader()};\r\n\r\n        const data =JSON.stringify({\r\n            \"userId\":id,\r\n            \"approve\":false\r\n        });\r\n        return axios.post(API_URL+'approveBusiness',\r\n            data,\r\n            header\r\n        );\r\n    }\r\n\r\n    getBusinessAccounts(){\r\n        return axios.get(API_URL + 'getBusinessAccounts', { headers: authHeader() });\r\n    }\r\n    getBusinessCoursesInAdminPage(userId){\r\n        const data=JSON.stringify({\r\n            \"userId\":userId\r\n        });\r\n        return axios.post(API_URL + 'viewCoursesInAdminPage', data, { headers: authHeader() });\r\n    }\r\n    getBusinessOneCourseInAdminPage(userId,courseId){\r\n        const data=JSON.stringify({\r\n            \"userId\":userId,\r\n            \"courseId\":courseId\r\n        });\r\n        return axios.post(API_URL + 'viewOneCourseInAdminPage', data, { headers: authHeader() });\r\n    }\r\n\r\n}\r\n\r\nexport default new AdminService();","import React, { Component } from \"react\";\r\n\r\nimport AdminService from \"../services/admin.service\";\r\nimport { Table, Button, CardGroup, Card} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction compare( a, b ) {\r\n    if ( a[1].businessName.toUpperCase() < b[1].businessName.toUpperCase()){\r\n        return -1;\r\n    }\r\n    if ( a[1].businessName.toUpperCase() > b[1].businessName.toUpperCase() ){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport default class BoardAdmin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          courseApplications: [],\r\n          businesses:[]\r\n        };\r\n      }\r\n\r\n    componentDidMount() {\r\n        AdminService.getBusinessAccounts().then(\r\n            response => {\r\n                this.setState({\r\n                    businesses: response.data.sort(compare)\r\n                });\r\n                console.log(this.state.businesses);\r\n                console.log(this.state.businesses.length);\r\n            },\r\n        );\r\n    }\r\n    \r\n\r\n      \r\n      render() {\r\n        return (\r\n          <div>\r\n            {/* Title */}\r\n            <h1>Admin Space</h1>\r\n    \r\n            {/* Buttons */}\r\n            <div>\r\n            <CardGroup>\r\n              <Card style={{ width: '18rem' }}>\r\n              \r\n              <Card.Body>\r\n              <Card.Title>Course Approval</Card.Title>\r\n              <Card.Text>\r\n\r\n              These are courses submitted by facilitors, please review carefully.\r\nOnce a decision is made, the system will automatically send an email to inform the applicant\r\n              </Card.Text>\r\n              <Button href=\"adminApproval/courses\">Check the List</Button>\r\n              </Card.Body>\r\n              </Card> \r\n\r\n    \r\n              <Card style={{ width: '18rem' }}>\r\n              \r\n              <Card.Body>\r\n              <Card.Title>Business Approval</Card.Title>\r\n              <Card.Text>\r\n              These are Businesses registered by users, please review carefully.\r\nOnce a decision is made, the system will automatically send an email to inform the applicant\r\n              </Card.Text>\r\n              <Button href=\"adminApproval/businesses\">Check the List</Button>\r\n              </Card.Body>\r\n              </Card> \r\n\r\n\r\n\r\n             \r\n\r\n              </CardGroup>\r\n              \r\n\r\n\r\n    \r\n   \r\n            </div>\r\n\r\n              <p>  </p>\r\n\r\n            <div>\r\n              <h3>Business Account List</h3>\r\n              </div>\r\n          <p>  </p>\r\n              {this.state.businesses.map((business) => {\r\n                      return (\r\n                          <div>\r\n                          <h5>\r\n                          <Link to={`/admin/${business[0]._id}`}>\r\n                      {business[1].businessName}\r\n                  </Link>\r\n                      </h5>\r\n                      <p>\r\n                      <b>Business Structure: </b>\r\n                      {business[1].businessStructure}\r\n                  </p>\r\n                  <p>\r\n                  <b>Phone: </b>\r\n                  {business[1].phone}\r\n              </p>\r\n                  </div>\r\n                  );\r\n                  })}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n\r\n          </div>\r\n        );\r\n      }\r\n    \r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentUser: AuthService.getCurrentUser()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AuthService.confirm(\r\n            this.props.match.params.token\r\n        ).then(\r\n            response => {\r\n                this.setState({\r\n                    message: response.data.message,\r\n                    successful: false\r\n                });\r\n            },\r\n            error => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n\r\n                this.setState({\r\n                    successful: false,\r\n                    message: resMessage\r\n                });\r\n            }\r\n        );\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n\r\n\r\n            <Form\r\n        onSubmit={this.handleRegister}\r\n        ref={c => {\r\n            this.form = c;\r\n        }}\r\n    >\r\n\r\n\r\n            <div\r\n                >\r\n                {this.state.message}\r\n                </div>\r\n\r\n\r\n\r\n        </Form>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n    \r\n    \r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport scriptLoader from \"react-async-script-loader\";\r\nimport UserService from \"../services/user.service\";\r\nimport AuthService from \"../services/auth.service\";\r\n const CLIENT = {\r\n   sandbox:\r\n     \"AbbtfecBeODkTGclTYhScc1J_MrroFd1g6XJ0gRGwoHXY-Lef2GmgiRaRtgeIISolOCCfB6XmqDAzQHB\",\r\n   production:\r\n     \"your_production_key\"\r\n };\r\n\r\n const CLIENT_ID =\r\n   process.env.NODE_ENV === \"production\" ? CLIENT.production : CLIENT.sandbox;\r\n const CURRENCY = \"AUD\";\r\n\r\nlet PayPalButton = null;\r\nclass PaypalButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showButtons: false,\r\n      failed: false,\r\n      paid: false,\r\n      error: false\r\n    };\r\n\r\n    window.React = React;\r\n    window.ReactDOM = ReactDOM;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { isScriptLoaded, isScriptLoadSucceed } = this.props;\r\n\r\n    if (isScriptLoaded && isScriptLoadSucceed) {\r\n      PayPalButton = window.paypal.Buttons.driver(\"react\", { React, ReactDOM });\r\n      this.setState({ showButtons: true });\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { isScriptLoaded, isScriptLoadSucceed } = nextProps;\r\n\r\n    const scriptJustLoaded =\r\n      !this.state.showButtons && !this.props.isScriptLoaded && isScriptLoaded;\r\n\r\n    if (scriptJustLoaded) {\r\n      if (isScriptLoadSucceed) {\r\n        PayPalButton = window.paypal.Buttons.driver(\"react\", {\r\n          React,\r\n          ReactDOM\r\n        });\r\n        this.setState({ showButtons: true });\r\n      }\r\n    }\r\n  }\r\n  createOrder = (data, actions) => {\r\n\r\n    return actions.order.create({\r\n      purchase_units: [\r\n        {\r\n          description: this.props.title,\r\n          amount: {\r\n            currency_code: \"AUD\",\r\n            value: this.props.cost\r\n          }\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onApprove = (data, actions) => {\r\n\r\n    actions.order.capture().then(details => {\r\n      const paymentData = {\r\n        payerID: data.payerID,\r\n        orderID: data.orderID\r\n      };  \r\n      console.log(\"Payment Approved: \", paymentData);\r\n      UserService.enrollCourse(AuthService.getCurrentUser().id,this.props.courseId,this.props.cost,data.payerID,data.orderID).then(\r\n          response => {\r\n            if (response.data.status === \"completed\"){\r\n              AuthService.refreshCurrentUser().then(\r\n                  () => {\r\n                    this.setState({ showButtons: false, paid: true ,failed: false});\r\n                  },\r\n                  error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                      loading: false,\r\n                      message: resMessage\r\n                    });\r\n                  }\r\n              );\r\n            }else if (response.data.status === \"unsuccessful\"){\r\n              this.setState({ showButtons: false, paid: false ,failed: true});\r\n            }else{\r\n              this.setState({ showButtons: false, error:true});\r\n            }\r\n            console.log(response.data);\r\n          },\r\n      ).catch((error) => {\r\n        console.log(error);\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { showButtons,paid, failed , error} = this.state;\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        {showButtons && (\r\n          <div>\r\n            <div>\r\n              <h2>Course: {this.props.title}</h2>\r\n              <h2>Cost： {this.props.cost} AUD</h2>\r\n            </div>\r\n\r\n            <PayPalButton\r\n              createOrder={(data, actions) => this.createOrder(data, actions)}\r\n              onApprove={(data, actions) => this.onApprove(data, actions)}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {paid && (\r\n          <div className=\"main\">\r\n            <img alt=\"Happy picture here\"  />\r\n            <h2>\r\n        Congrats! you are now enrolled in  {this.props.title}{\" \"}\r\n\r\n            </h2>\r\n          </div>\r\n        )}\r\n\r\n    {failed && (\r\n    <div className=\"main\">\r\n        <img alt=\"Sad\"  />\r\n        <h2>\r\n        Sorry, your payment seems to be failed. Please try again.\r\n    </h2>\r\n    <h2>\r\n    If you meet any problem, please contact admins.\r\n    </h2>\r\n    </div>\r\n    )}\r\n    {error && (\r\n    <div className=\"main\">\r\n        <img alt=\"Sad\"  />\r\n        <h2>\r\n        An error has occured. We're really sorry for the inconvinience!\r\n    </h2>\r\n    <h2>\r\n    If the transaction has been completed, please contact our admins. Otherwise, please try again.\r\n    </h2>\r\n    </div>\r\n    )}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n export default scriptLoader(`https://www.paypal.com/sdk/js?client-id=${CLIENT_ID}&currency=${CURRENCY}`)(PaypalButton);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport PaypalButtons from \"./PaypalButton\"\r\nimport \"../styles/CourseDetail.css\";\r\nimport { Table,Form, Button, Col, Modal } from \"react-bootstrap\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\n\r\n\r\nclass CourseDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n          showPaypal : false\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(`http://localhost:5000/courses/${this.props.match.params.id}`)\r\n      .then((response) => {\r\n        this.setState({\r\n          course: response.data[0],\r\n          title: response.data[0].title,\r\n          description: response.data[0].description,\r\n          facilitator: response.data[0].facilitator,\r\n          startDate: response.data[0].startDate,\r\n          endDate: response.data[0].endDate,\r\n            startTime: response.data[0].startTime,\r\n            endTime: response.data[0].endTime,\r\n            location: response.data[0].location[\"address1\"],\r\n            count: response.data[0].count,\r\n          maxMembers: response.data[0].maxMembers,\r\n          cost: response.data[0].cost,\r\n            ID: response.data[0]._id\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n    showPaypalButtons = () => {\r\n        this.setState({ showPaypal: true });\r\n    };\r\n  render() {\r\n      const { showPaypal } = this.state;\r\n      const currentUser = AuthService.getCurrentUser();\r\n      let button;\r\n      let button1;\r\n      if (!currentUser) {\r\n          button = <Button variant=\"primary\" onClick = {this.showPaypalButtons}  type=\"button\" disabled>\r\n              You have to log in first to enroll in a course\r\n              </Button>;\r\n      } else if (currentUser.courseEnrolledIn.includes(this.state.ID)){\r\n          button = <Button variant=\"primary\" onClick = {this.showPaypalButtons}  type=\"button\" disabled>\r\n              You have enrolled in this course\r\n              </Button>;\r\n      } else{\r\n          \r\n          button = <Button variant=\"primary\" onClick = {this.showPaypalButtons}  type=\"button\">\r\n              Buy now for ${this.state.cost}\r\n              </Button>;\r\n         \r\n      }\r\n      if (showPaypal) {\r\n          return <PaypalButtons\r\n          cost = {this.state.cost}\r\n          title = {this.state.title}\r\n          courseId = {this.state.ID}\r\n          />;\r\n      } else {\r\n        return (\r\n          <div>\r\n            {this.state.course ? (\r\n                    <div>\r\n                    <img src=\"https://picsum.photos/1000/300\" alt=\"\" />\r\n                <h1>{this.state.title}</h1>\r\n                <div style={{ width: \"100%\" }}>\r\n      <div style={{ width: \"50%\", height: 80, float: \"left\" }}>\r\n      <p>Created by {this.state.facilitator}</p>\r\n\r\n          <p>\r\n          {new Date(this.state.course.startDate).toISOString().replace('-', '/').split('T')[0].replace('-', '/').concat(\r\n                  \" - \",\r\n                  new Date(this.state.course.endDate).toISOString().replace('-', '/').split('T')[0].replace('-', '/')\r\n              )} | {this.state.course.location.address1.concat(\r\n              \", \",\r\n              this.state.course.location.address2,\r\n              \", \",\r\n              this.state.course.location.city,\r\n              \", \",\r\n              this.state.course.location.state,\r\n              \", \",\r\n              this.state.course.location.postCode,\r\n          )} |{\" \"}\r\n          {this.state.maxMembers-this.state.count} spots available!\r\n          </p>\r\n          </div>\r\n          <div\r\n          style={{\r\n              width: \"50%\",\r\n                  height: 80,\r\n                  float: \"right\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  // alignContent: \"center\"\r\n                  justifyContent: \"center\",\r\n          }}\r\n      >\r\n\r\n\r\n          {button}\r\n      </div>\r\n          <p>\r\n          {new Date(this.state.course.startTime).toLocaleString([], {hour: '2-digit', minute:'2-digit'}).concat(\r\n                  \" - \",\r\n                  new Date(this.state.course.endTime).toLocaleString([], {hour: '2-digit', minute:'2-digit'})\r\n              )} | {this.state.course.repeatDay.join(', ')}\r\n          </p>\r\n          </div>\r\n\r\n          <div>\r\n          <p>\r\n          <h3>Description</h3>\r\n          {this.state.description}\r\n      </p>\r\n          </div>\r\n          </div>\r\n                ):null}\r\n            </div>\r\n        );\r\n  }\r\n      }\r\n}\r\n\r\nexport default CourseDetail;\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CourseTile(props) {\r\n  return (\r\n    // <div>\r\n    //   <h3>\r\n    //     <Link to={`/courses/${props.category}/${props.id}`}>{props.title}</Link>\r\n    //   </h3>\r\n    //   <p>{props.description}</p>\r\n    // </div>\r\n    <div className=\"col mb-4\">\r\n      <div className=\"card\">\r\n        <img src=\"https://picsum.photos/1000/300\" alt=\"\" />\r\n        <div className=\"card-body\">\r\n          <h5>\r\n            <Link to={`/courses/${props.category}/${props.id}`}>\r\n              {props.title}\r\n            </Link>\r\n          </h5>\r\n            <p style={{fontSize:'87%',fontWeight: 600}}>Starting from {new Date(props.startDate).toISOString().replace('-', '/').split('T')[0].replace('-', '/')}</p>\r\n            \r\n    \r\n          <p>{props.description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseTile;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport CourseTile from \"./CourseTile\";\r\n\r\nfunction compare( a, b ) {\r\n    if ( new Date(a.startDate) < new Date(b.startDate) ){\r\n        return -1;\r\n    }\r\n    if ( new Date(a.startDate) > new Date(b.startDate) ){\r\n        return 1;\r\n    }\r\n    if ( new Date(a.startTime) > new Date(b.startTime) ){\r\n        return -1;\r\n    }\r\n    if ( new Date(a.startTime) < new Date(b.startTime) ){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nclass CourseList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      category: \"\",\r\n      description: \"\",\r\n      imgUrl: \"\",\r\n      courseIds: [],\r\n      courses: [],\r\n    };\r\n\r\n    this.getCourses = this.getCourses.bind(this);\r\n  }\r\n\r\n  // Retrieve all the courses in the database, and add all the courses to the state\r\n  componentDidMount() {\r\n    // Retrieve an array of courseIds for a given category\r\n    axios\r\n      // *** The following commented line is needed for dynamic routes ***\r\n      .get(\r\n        `http://localhost:5000/categories/find/${this.props.match.params.category}`\r\n      )\r\n      .then((response) => {\r\n        this.setState({\r\n          category: response.data[0].category,\r\n          description: response.data[0].description,\r\n          imgUrl: response.data[0].imgUrl,\r\n          courseIds: response.data[0].courses,\r\n        });\r\n        this.getCourses(); // This is a proceeding function\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  getCourses() {\r\n    // Retrieve all the courses given the course's '_id'\r\n    this.state.courseIds.forEach((courseId) => {\r\n      axios\r\n        .get(`http://localhost:5000/courses/${courseId}`)\r\n        .then((response) => {\r\n          this.setState({\r\n            courses: this.state.courses.concat(response.data)\r\n          });\r\n          //console.log(response.data);\r\n        });\r\n    });\r\n    this.setState({\r\n          courses: this.state.courses.sort(compare)\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h1>{this.state.category}</h1>\r\n          <img src={this.state.imgUrl} alt=\"\" />\r\n          <p>{this.state.description}</p>\r\n        </div>\r\n        <div className=\"row row-cols-1 row-cols-md-2\">\r\n          {this.state.courses.map((course) => {\r\n            return (\r\n              <CourseTile\r\n                category={this.props.match.params.category}\r\n                title={course.title}\r\n                description={course.description}\r\n                key={course._id}\r\n                id={course._id}\r\n                  startDate={course.startDate}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CourseList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CategoryTile(props) {\r\n  return (\r\n    <div className=\"col mb-4\">\r\n      <div className=\"card\">\r\n        <h3>\r\n          <Link to={`/courses/${props.category}`}>{props.category}</Link>\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryTile;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport CategoryTile from \"./CategoryTile\";\r\n\r\nclass CategoryList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  // Retrieve all the categories in the database, and add all the categories to the state\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/categories/\")\r\n      .then((response) => {\r\n        this.setState({ categories: response.data });\r\n        // console.log(response.data); // To see the data, ### Remove once done\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"col\">\r\n          {/* Each object is called \"individualCategory because the field for the object is also called 'category'\" */}\r\n          {this.state.categories.map((individualCategory) => {\r\n            return (\r\n              <CategoryTile\r\n                category={individualCategory.category}\r\n                key={individualCategory._id}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryList;\r\n","import React, { Component } from \"react\";\r\nimport CategoryList from \"./CategoryList\";\r\n\r\nclass Courses extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Categories</h1>\r\n        <br />\r\n\r\n        <CategoryList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Courses;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Button, Form ,Accordion,Card} from \"react-bootstrap\";\r\n\r\nimport AdminService from \"../services/admin.service\";\r\n\r\n\r\nclass CourseApplicationList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n    \r\n    };\r\n  }\r\n  approve(id){\r\n      console.log(id);\r\n      AdminService.approveCourseApplication(id).then(()=>{\r\n            this.getApplications();\r\n        });\r\n    }\r\n\r\n    deny(id){\r\n        console.log(id);\r\n        AdminService.denyCourseApplication(id).then(()=>{\r\n            this.getApplications();\r\n        });\r\n\r\n    }\r\n\r\n  componentDidMount() {\r\n      this.getApplications();\r\n  }\r\n\r\n  getApplications(){\r\n      AdminService.getCourseApplications().then((response) => {\r\n          this.setState({\r\n              data: Array.from(response.data),\r\n          });\r\n          console.log(this.state.data);\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Map each value */}\r\n\r\n        {this.state.data.map((singleCourse) => {\r\n          return (\r\n\r\n            <Accordion defaultActiveKey=\"0\">\r\n            <Card>\r\n            <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                {singleCourse.title}\r\n            </Accordion.Toggle>\r\n            <Button className=\"float-right\" variant=\"danger\" onClick={() => this.deny(singleCourse._id)}>\r\n                Deny\r\n                </Button>\r\n                <Button className=\"float-right\" variant=\"primary\" onClick={() => this.approve(singleCourse._id)}>\r\n                Approve\r\n                </Button>\r\n\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body><p>\r\n              <b>Course ID: </b>\r\n          {singleCourse._id}\r\n        </p>\r\n          <p>\r\n          <b>Application date: </b>\r\n          {singleCourse.createdAt}\r\n        </p>\r\n          <p>\r\n          <b>Description: </b>\r\n          {singleCourse.description}\r\n        </p>\r\n          <p>\r\n          <b>Facilitator: </b>\r\n          {singleCourse.facilitator}\r\n        </p>\r\n          <p>\r\n          <b>Start Date: </b>\r\n          {singleCourse.startDate}\r\n        </p>\r\n          <p>\r\n          <b>Address 1: </b>\r\n          {singleCourse.location.address1}\r\n        </p>\r\n          <p>\r\n          <b>Address 2: </b>\r\n          {singleCourse.location.address2}\r\n        </p>\r\n          <p>\r\n          <b>City: </b>\r\n          {singleCourse.location.city}\r\n        </p>\r\n          <p>\r\n          <b>State: </b>\r\n          {singleCourse.location.state}\r\n        </p>\r\n          <p>\r\n          <b>Zip: </b>\r\n          {singleCourse.location.postCode}\r\n        </p>\r\n          <p>\r\n          <b>Cost: </b>\r\n          {singleCourse.cost}\r\n        </p>\r\n          <p>\r\n          <b>Max Members: </b>\r\n          {singleCourse.maxMembers}\r\n        </p></Card.Body>\r\n            </Accordion.Collapse>\r\n            </Card>\r\n            </Accordion>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CourseApplicationList;\r\n","import React, { Component } from \"react\";\r\nimport CourseApplicationList from \"./CourseApplicationList\";\r\n\r\nclass AdminCourseApproval extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Heading */}\r\n        <h1>Course Approvals</h1>\r\n\r\n        <CourseApplicationList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminCourseApproval;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form ,Accordion,Card} from \"react-bootstrap\";\r\nimport AdminService from \"../services/admin.service\";\r\n\r\nclass BusinessApplicationList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApplications();\r\n}\r\n  approve(id){\r\n    console.log(id);\r\n    AdminService.approveBusinessApplication(id).then(()=>{\r\n      this.getApplications();\r\n    })\r\n  }\r\n\r\n  deny(id){\r\n    console.log(id);\r\n    AdminService.denyBusinessApplication(id).then(()=>{\r\n      this.getApplications();\r\n    })\r\n  }\r\n\r\n  getApplications(){\r\n    AdminService.getBusinessApplications().then(\r\n        (response) => {\r\n          this.setState({\r\n            data: Array.from(response.data)\r\n          });\r\n          console.log(this.state.data);\r\n        });\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n        {/* Map each value */}\r\n\r\n    {this.state.data.map((business) => {\r\n      return (\r\n\r\n          <Accordion defaultActiveKey=\"0\">\r\n      <Card>\r\n      <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n          {business[1].businessName}  -  {business[0].username}\r\n          </Accordion.Toggle>\r\n          <Button className=\"float-right\" variant=\"danger\" onClick={() => this.approve(business[0]._id)}>\r\n      Deny\r\n      </Button>\r\n      <Button className=\"float-right\" variant=\"primary\" onClick={() => this.deny(business[0]._id)}>\r\n      Approve\r\n      </Button>\r\n\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"0\">\r\n          <Card.Body>\r\n          <p>\r\n          <b>Business Name: </b>\r\n      {business[1].businessName}\r\n    </p>\r\n      <p>\r\n      <b>User Name: </b>\r\n      {business[0].username}\r\n    </p>\r\n      <p>\r\n      <b>Business Description: </b>\r\n      {business[1].decriptionOfBusiness}\r\n    </p>\r\n      <p>\r\n      <b>Business Structure: </b>\r\n      {business[1].businessStructure}\r\n    </p>\r\n      <p>\r\n      <b>ABN: </b>\r\n      {business[1].ABN}\r\n    </p>\r\n      <p>\r\n      <b>TFN: </b>\r\n      {business[1].TFN}\r\n    </p>\r\n      <p>\r\n      <b>Registered GST: </b>\r\n      {business[1].registeredGST}\r\n    </p>\r\n      <p>\r\n      <b>Professional Indemnity Insurance: </b>\r\n      {business[1].professionalIndemnityInsurance}\r\n    </p>\r\n      <p>\r\n      <b>Public Liability Insurance: </b>\r\n      {business[1].publicLiabilityInsurance}\r\n    </p>\r\n      <p>\r\n      <b>Business Address: </b>\r\n      {JSON.stringify(business[1].businessAddress)}\r\n    </p>\r\n      <p>\r\n      <b>Phone: </b>\r\n      {business[1].phone}\r\n    </p>\r\n      <p>\r\n      <b>Website: </b>\r\n      {business[1].website}\r\n    </p>\r\n      <p>\r\n      <b>Email: </b>\r\n      {business[1].email}\r\n    </p>\r\n      <p>\r\n      <b>Style Of Course: </b>\r\n      {business[1].styleOfCourse}\r\n    </p>\r\n      <p>\r\n      <b>Referee Contacts: </b>\r\n      {JSON.stringify(business[1].refereeContacts)}\r\n    </p>\r\n      <p>\r\n      <b>Facilitators: </b>\r\n      {JSON.stringify(business[1].facilitators)}\r\n    </p>\r\n</Card.Body>\r\n      </Accordion.Collapse>\r\n      </Card>\r\n      </Accordion>\r\n    );\r\n    })}\r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BusinessApplicationList;\r\n","import React, { Component } from \"react\";\r\nimport { Button,Accordion,Card } from \"react-bootstrap\";\r\nimport BusinessApplicationList from \"./BusinessApplicationList\";\r\n\r\nclass AdminBusinessApproval extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n  handleClose(){\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Heading */}\r\n        <h1>Business Approvals</h1>\r\n\r\n        <BusinessApplicationList />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminBusinessApproval;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BusinessRegistration extends Component {\r\n  constructor() {\r\n    super();\r\n    const errors = [];\r\n    this.state = {\r\n\r\n      id: AuthService.getCurrentUser().id,\r\n      // General\r\n      businessName: \"\",\r\n      businessStructure: \"\",\r\n      description: \"\",\r\n      genre: \"\", // Genre of courses (CHECKBOXES with options) (populated from database)\r\n      genreList: [\"Programming\", \"Hunting\", \"Motivation\"],\r\n\r\n      // Contact\r\n      address1: \"\",\r\n      address2: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      zip: \"\",\r\n\r\n      phone: \"\",\r\n      website: \"\",\r\n      email: \"\",\r\n\r\n      image: \"\",\r\n\r\n      // Legal requirements\r\n      ABN: \"\", // Australian Business Number\r\n      ABNStatus: false,\r\n      TFN: \"\", // Tax File Number\r\n      TFNStatus: false,\r\n      RGST: \"\", // Registered GST\r\n      RGSTStatus: false,\r\n      PII: \"\", // Professional Indemnity Insurance\r\n      PIIStatus: false,\r\n      PLI: \"\", // Public Liability Insurance\r\n      PLIStatus: false,\r\n      errors:[],\r\n\r\n      // Facilitators belonging to the business\r\n    };\r\n\r\n    // Binding of methods\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onChangeBusinessName = this.onChangeBusinessName.bind(this);\r\n    this.onChangeBusinessStructure = this.onChangeBusinessStructure.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeGenre = this.onChangeGenre.bind(this);\r\n    this.onChangeImage = this.onChangeImage.bind(this);\r\n    this.onChangeAddress1 = this.onChangeAddress1.bind(this);\r\n    this.onChangeAddress2 = this.onChangeAddress2.bind(this);\r\n    this.onChangeAddressCity = this.onChangeAddressCity.bind(this);\r\n    this.onChangeAddressState = this.onChangeAddressState.bind(this);\r\n    this.onChangeAddressZip = this.onChangeAddressZip.bind(this);\r\n    this.onChangePhone = this.onChangePhone.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeWebsite = this.onChangeWebsite.bind(this);\r\n    this.onChangeABN = this.onChangeABN.bind(this);\r\n    this.onClickABN = this.onClickABN.bind(this);\r\n    this.onChangeTFN = this.onChangeTFN.bind(this);\r\n    this.onClickTFN = this.onClickTFN.bind(this);\r\n    this.onChangeRGST = this.onChangeRGST.bind(this);\r\n    this.onClickRGST = this.onClickRGST.bind(this);\r\n    this.onChangePII = this.onChangePII.bind(this);\r\n    this.onClickPII = this.onClickPII.bind(this);\r\n    this.onChangePLI = this.onChangePLI.bind(this);\r\n    this.onClickPLI = this.onClickPLI.bind(this);\r\n  }\r\n\r\n  // Methods for changing form values\r\n  onChangeBusinessName(e) {\r\n    this.setState({\r\n      businessName: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeBusinessStructure(e) {\r\n    this.setState({\r\n      businessStructure: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeGenre(e) {\r\n    this.setState({\r\n      genre: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeImage(e) {\r\n    this.setState({\r\n      image: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeAddress1(e) {\r\n    this.setState({\r\n      address1: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeAddress2(e) {\r\n    this.setState({\r\n      address2: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeAddressCity(e) {\r\n    this.setState({\r\n      city: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeAddressState(e) {\r\n    this.setState({\r\n      state: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeAddressZip(e) {\r\n    this.setState({\r\n      zip: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePhone(e) {\r\n    this.setState({\r\n      phone: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeWebsite(e) {\r\n    this.setState({\r\n      website: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeABN(e) {\r\n    this.setState({\r\n      ABN: e.target.value,\r\n    });\r\n  }\r\n\r\n  onClickABN() {\r\n    this.setState({\r\n      ABNStatus: !this.state.ABNStatus,\r\n    });\r\n  }\r\n\r\n  onChangeTFN(e) {\r\n    this.setState({\r\n      TFN: e.target.value,\r\n    });\r\n  }\r\n\r\n  onClickTFN() {\r\n    this.setState({\r\n      TFNStatus: !this.state.TFNStatus,\r\n    });\r\n  }\r\n\r\n  onChangeRGST(e) {\r\n    this.setState({\r\n      RGST: e.target.value,\r\n    });\r\n  }\r\n\r\n  onClickRGST() {\r\n    this.setState({\r\n      RGSTStatus: !this.state.RGSTStatus,\r\n    });\r\n  }\r\n\r\n  onChangePII(e) {\r\n    this.setState({\r\n      PII: e.target.value,\r\n    });\r\n  }\r\n\r\n  onClickPII() {\r\n    this.setState({\r\n      PIIStatus: !this.state.PIIStatus,\r\n    });\r\n  }\r\n\r\n  onChangePLI(e) {\r\n    this.setState({\r\n      PLI: e.target.value,\r\n    });\r\n  }\r\n\r\n  onClickPLI() {\r\n    this.setState({\r\n      PLIStatus: !this.state.PLIStatus,\r\n    });\r\n  }\r\n\r\n  handleValidation(){\r\n    //let fields = this.state.fields;\r\n    let formIsValid = true;\r\n    this.errors = [];\r\n    this.state.errors = []\r\n   \r\n\r\n    //Business Structure\r\n    if(this.state.businessStructure.length == 0){\r\n      console.log(this.state.businessStructure.length)\r\n      formIsValid = false\r\n      this.errors.push(\"Business Structure Cannot be empty\")\r\n    }\r\n\r\n    //Business Description\r\n    if(this.state.description.length > 300){\r\n      formIsValid = false\r\n      this.errors.push(\"Business Description Exceeeded word limit 300\")\r\n    }\r\n\r\n\r\n    //Address1\r\n    if(this.state.address1.length > 50 || this.state.address1.length == 0){\r\n      formIsValid = false\r\n      this.errors.push(\"Address 1 cannot be empty or exceeed word limit 50\")\r\n    }\r\n\r\n\r\n    //Address2\r\n    if(this.state.address2.length > 50){\r\n      formIsValid = false\r\n      this.errors.push(\"Address 2 Exceeeded word limit 50\")\r\n    }\r\n\r\n    //City\r\n    if(!(/^[a-zA-Z]+$/.test(this.state.city)) || this.state.city.length > 50){\r\n      formIsValid = false\r\n      this.errors.push(\"City can only be letters or characters exceeded word limit 50\")\r\n    }\r\n\r\n    //State\r\n    if(this.state.state.length == 0){\r\n      formIsValid = false\r\n      this.errors.push(\"State cannot be empty\")\r\n    }\r\n\r\n    //Zip\r\n    if(!(/^\\d+$/.test(this.state.zip)) || this.state.zip.length > 30){\r\n      formIsValid = false\r\n      this.errors.push(\"Zip can only be number or number too long\")\r\n    }\r\n\r\n    //Phone number\r\n    if(!(/^\\d+$/.test(this.state.phone)) || this.state.phone.length > 30){\r\n      formIsValid = false\r\n      this.errors.push(\"Phone Number can only be number or number too long\")\r\n    }\r\n\r\n    //Email\r\n    if (!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.state.email))){\r\n      formIsValid = false\r\n      this.errors.push(\"Invalid email\")\r\n    }\r\n\r\n    //Website\r\n    if(!(/(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi.test(this.state.website))){\r\n      formIsValid = false\r\n      this.errors.push(\"Invalid website\")\r\n    }\r\n\r\n    //ABN\r\n    if(this.state.ABN.length > 11){\r\n      formIsValid = false\r\n      this.errors.push(\"ABN cannot exceed 11 digits\")\r\n    }\r\n\r\n    //TFN\r\n    if(this.state.ABN.length > 9){\r\n      formIsValid = false\r\n      this.errors.push(\"TFN cannot exceed 9 digits\")\r\n    }\r\n    if(this.state.TFN.length == 0 && this.state.ABN.length == 0){\r\n      formIsValid = false\r\n      this.errors.push(\"You have to provide at least one of your ABN or TFN\")\r\n    }\r\n\r\n    //RGST\r\n    if(this.state.RGST.length > 600 || this.state.RGST.split(' ').length > 200){\r\n      formIsValid = false\r\n      this.errors.push(\"If you want to provide any information about your registered GST, please notice the length should not exceed 200 words\")\r\n    }\r\n\r\n    //PII\r\n    if(this.state.PII.length > 600 || this.state.PII.split(' ').length > 200){\r\n      formIsValid = false\r\n      this.errors.push(\"If you want to provide any information about your Professional Indemnity Insurance, please notice the length should not exceed 200 words\")\r\n    }\r\n\r\n    //PLI \r\n    if(this.state.PLI.length > 600 || this.state.PLI.split(' ').length > 200){\r\n      formIsValid = false\r\n      this.errors.push(\"If you want to provide any information about your Public Liability Insurance, please notice the length should not exceed 200 words\")\r\n    }\r\n\r\n    return formIsValid\r\n  }\r\n\r\n  // This is where you send the data to the backend\r\n  handleSubmit(e) {\r\n    this.setState({ errors:[] });\r\n    e.preventDefault();\r\n    if(this.handleValidation()){\r\n    console.log(\"ID \" + this.state.id);\r\n    console.log(\"Business name: \" + this.state.businessName);\r\n    console.log(\"Business structure: \" + this.state.businessStructure);\r\n    console.log(\"Description: \" + this.state.description);\r\n    console.log(\"Genre: \" + this.state.genre);\r\n    console.log(\"Image: \" + this.state.image);\r\n    console.log(\"Address1: \" + this.state.address1);\r\n    console.log(\"Address2: \" + this.state.address2);\r\n    console.log(\"City: \" + this.state.city);\r\n    console.log(\"State: \" + this.state.state);\r\n    console.log(\"Zip: \" + this.state.zip);\r\n    console.log(\"Phone: \" + this.state.phone);\r\n    console.log(\"Email: \" + this.state.email);\r\n    console.log(\"Website: \" + this.state.website);\r\n    console.log(\"ABN Status: \" + this.state.ABNStatus);\r\n    console.log(\"ABN: \" + this.state.ABN);\r\n    console.log(\"TFN Status: \" + this.state.TFNStatus);\r\n    console.log(\"TFN: \" + this.state.TFN);\r\n    console.log(\"RGST Status: \" + this.state.RGSTStatus);\r\n    console.log(\"RGST: \" + this.state.RGST);\r\n    console.log(\"PII Status: \" + this.state.PIIStatus);\r\n    console.log(\"PII: \" + this.state.PII);\r\n    console.log(\"PLI Status: \" + this.state.PLIStatus);\r\n    console.log(\"PLI: \" + this.state.PLI);\r\n\r\n    UserService.registerBusiness(\r\n      this.state.id,\r\n      this.state.businessStructure,\r\n      this.state.businessName,\r\n      this.state.ABN,\r\n      this.state.TFN,\r\n      this.state.RGSTStatus, \r\n      this.state.PII,\r\n      this.state.PLI,\r\n        {\"address1\":this.state.address1,\"address2\":this.state.address2,\"city\":this.state.city,\"postCode\":this.state.zip},\r\n      this.state.phone,\r\n      this.state.website,\r\n      this.state.email,\r\n      this.state.description\r\n    ).catch((error) =>{\r\n      if(error.response){\r\n        console.log(error.response.data);\r\n        this.errors.push(error.response.data);\r\n      }else{\r\n        this.errors.push(\"Business registration Successful\");\r\n      }\r\n\r\n\r\n    });\r\n      e.preventDefault();\r\n    }\r\n    else{\r\n      console.log(\"Error submitting the form\")\r\n      console.log(this.errors)\r\n      let errors = this.errors\r\n      if (this.errors.length > 0) {\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <header className=\"jumbotron\">\r\n          <h3>Apply to Register a Business</h3>\r\n          <hr />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            {/* Business Name */}\r\n            <Form.Group>\r\n              <Form.Label>Business Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter business name here\"\r\n                value={this.state.businessName}\r\n                onChange={this.onChangeBusinessName}\r\n              />\r\n            </Form.Group>\r\n\r\n            {/* Business Structure */}\r\n            <Form.Group>\r\n              <Form.Label>Business Structure</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={this.state.businessStructure}\r\n                onChange={this.onChangeBusinessStructure}\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Choose...\r\n                </option>\r\n                <option>Sole Trader</option>\r\n                <option>Partnership</option>\r\n                <option>Company</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* Business Description */}\r\n            <Form.Group>\r\n              <Form.Label>Business Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                type=\"text\"\r\n                placeholder=\"Enter description of business here\"\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n              />\r\n            </Form.Group>\r\n\r\n            {/* Business Genre */}\r\n            <Form.Group>\r\n              <Form.Label>Genre</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={this.state.genre}\r\n                onChange={this.onChangeGenre}\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Choose...\r\n                </option>\r\n                {this.state.genreList.map(function (genre) {\r\n                  return (\r\n                    <option key={genre} value={genre}>\r\n                      {genre}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* Business Image */}\r\n            <Form.Label>Business Image</Form.Label>\r\n            <Form.File onChange={this.onChangeImage} />\r\n            <br />\r\n\r\n            {/* Business Address */}\r\n            <Form.Label>Location</Form.Label>\r\n            <hr />\r\n            <Form.Group>\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"1234 Main St\"\r\n                value={this.state.address1}\r\n                onChange={this.onChangeAddress1}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Address 2</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Apartment, studio, or floor\"\r\n                value={this.state.address2}\r\n                onChange={this.onChangeAddress2}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={this.state.city}\r\n                  onChange={this.onChangeAddressCity}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col}>\r\n                <Form.Label>State</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={this.state.state}\r\n                  onChange={this.onChangeAddressState}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Choose...\r\n                  </option>\r\n                  <option>ACT</option>\r\n                  <option>NSW</option>\r\n                  <option>NT</option>\r\n                  <option>QLD</option>\r\n                  <option>SA</option>\r\n                  <option>TAS</option>\r\n                  <option>VIC</option>\r\n                  <option>WA</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Zip</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={this.state.zip}\r\n                  onChange={this.onChangeAddressZip}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <br />\r\n\r\n            {/* Contact */}\r\n            <Form.Label>Contact</Form.Label>\r\n            <hr />\r\n            <Form.Row>\r\n              {/* Phone */}\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"04-1234-5678\"\r\n                  value={this.state.phone}\r\n                  onChange={this.onChangePhone}\r\n                />\r\n              </Form.Group>\r\n\r\n              {/* Email */}\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"email@example.com\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChangeEmail}\r\n                />\r\n              </Form.Group>\r\n\r\n              {/* Website */}\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Website</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"www.example.com\"\r\n                  value={this.state.website}\r\n                  onChange={this.onChangeWebsite}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <br />\r\n            <Form.Label>Legal Requirements</Form.Label>\r\n            <hr />\r\n            {/* ABN */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  selected={this.state.ABNStatus}\r\n                  label=\"Australian Business Number (ABN)\"\r\n                  onClick={this.onClickABN}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Leave blank if none\"\r\n                  value={this.state.ABN}\r\n                  onChange={this.onChangeABN}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            {/* TFN */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  selected={this.state.TFNStatus}\r\n                  label=\"Tax File Number (TFN)\"\r\n                  onClick={this.onClickTFN}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Leave blank if none\"\r\n                  value={this.state.TFN}\r\n                  onChange={this.onChangeTFN}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* RGST */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  selected={this.state.RGSTStatus}\r\n                  label=\"Registered GST\"\r\n                  onClick={this.onClickRGST}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Leave blank if none\"\r\n                  value={this.state.RGST}\r\n                  onChange={this.onChangeRGST}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* PII */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  selected={this.state.PIIStatus}\r\n                  label=\"Professional Indemnity Insurance\"\r\n                  onClick={this.onClickPII}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Leave blank if none\"\r\n                  value={this.state.PII}\r\n                  onChange={this.onChangePII}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* PLI */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  selected={this.state.PLIStatus}\r\n                  label=\"Public Liability Insurance\"\r\n                  onClick={this.onClickPLI}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Leave blank if none\"\r\n                  value={this.state.PLI}\r\n                  onChange={this.onChangePLI}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* Submit Button */}\r\n            {errors.map(error => (\r\n            <p key={error}>{error}</p>\r\n            ))}\r\n            <Form.Row>\r\n              <Button type=\"submit\">Submit for Approval</Button>\r\n            </Form.Row>\r\n          </Form>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://signallingserver.us-east-2.elasticbeanstalk.com/courses/';\r\n\r\nclass CourseService {\r\n    getHistoryCourses(userId) {\r\n        return axios.get(API_URL + 'getHistoryCourses/'+userId);\r\n    }\r\n}\r\n\r\nexport default new CourseService();","import React, { Component } from \"react\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Table,Form, Button, Col, Modal } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BusinessService from \"../services/business.service\"\r\nimport CourseService from \"../services/course.service\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\n\r\nexport default class BusinessUploadCourse extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const errors = [];\r\n        this.state = {\r\n            id: AuthService.getCurrentUser().business._id,\r\n            historyCourses:[],\r\n            title: \"\",\r\n            genres: [\"Programming\",\"Hunting\",\"Motivation\"], // This list of genres should be taken from the genres within the database\r\n\r\n            genre:\"Programming\",\r\n            description: \"\",\r\n\r\n            // Date & Time\r\n            startDate: new Date(),\r\n            endDate: new Date(),\r\n            startTime: new Date(),\r\n            endTime: new Date(),\r\n            intervalDescription: \"\",\r\n\r\n            // Address\r\n            address1: \"\",\r\n            address2: \"\",\r\n            city: \"\",\r\n            state: \"\",\r\n            zip: \"\",\r\n\r\n            // Members and cost\r\n            maxMembers: 0,\r\n            minMembers:0,\r\n            cost: 0,\r\n\r\n            // Business Details\r\n            businessName: \"\",\r\n\r\n            days: [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\"],\r\n            selecteddays:[],\r\n\r\n            frequency:[\"Every week\",\"Every two weeks\",\"Every months\"],\r\n            selectedfrequency:\"\",\r\n            // businessEmail: \"\",\r\n            // businessPhone: \"\",\r\n\r\n            // Facilitator Details\r\n            // facilitatorFirstName: \"\",\r\n            // facilitatorLastName: \"\",\r\n            // facilitatorEmail: \"\",\r\n            // facilitatorPhone: \"\",\r\n            facilitatorList: [\"John Doe\", \"Teri Dactyl\", \"Rod Knee\"],\r\n            selectedFacilitator: \"\",\r\n\r\n            // Pre-reqs\r\n            plwf: false, // Public Liability Waiver Form\r\n            mif: false, // Medical Indemnity Form\r\n            consf: false, // Consent Form\r\n            priorSkillset: \"\",\r\n\r\n            // Terms and Conditions\r\n            tcs: false,\r\n            show:false,\r\n            errors: [],\r\n        };\r\n\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\r\n        this.onChangeendDate = this.onChangeendDate.bind(this);\r\n        this.onChangeStartTime = this.onChangeStartTime.bind(this);\r\n        this.onChangeEndTime = this.onChangeEndTime.bind(this);\r\n        this.onChangeIntervalDescription = this.onChangeIntervalDescription.bind(this);\r\n        this.onChangeAddress1 = this.onChangeAddress1.bind(this);\r\n        this.onChangeAddress2 = this.onChangeAddress2.bind(this);\r\n        this.onChangeAddressCity = this.onChangeAddressCity.bind(this);\r\n        this.onChangeAddressState = this.onChangeAddressState.bind(this);\r\n        this.onChangeAddressZip = this.onChangeAddressZip.bind(this);\r\n        this.onChangeMaxMembers = this.onChangeMaxMembers.bind(this);\r\n        this.onChangeminMembers = this.onChangeminMembers.bind(this);\r\n        this.onChangeCost = this.onChangeCost.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onClickPlwf = this.onClickPlwf.bind(this);\r\n        this.onClickMif = this.onClickMif.bind(this);\r\n        this.onClickConsf = this.onClickConsf.bind(this);\r\n        this.onChangeSkillset = this.onChangeSkillset.bind(this);\r\n        this.onClickTcs = this.onClickTcs.bind(this);\r\n        this.onChangeFacilitator = this.onChangeFacilitator.bind(this);\r\n        this.onChangefrequency = this.onChangefrequency.bind(this);\r\n        this.onChangedays = this.onChangedays.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        CourseService.getHistoryCourses(AuthService.getCurrentUser().id).then(\r\n            response => {\r\n                this.setState({\r\n                    historyCourses: response.data\r\n                });\r\n                console.log(this.state.historyCourses);\r\n                console.log(this.state.historyCourses.length);\r\n            }\r\n        );\r\n        this.setState({\r\n            businessName: AuthService.getCurrentUser().business.businessName\r\n        });\r\n    }\r\n    handleClose(){\r\n        this.setState({ show: false });\r\n    };\r\n    handleImport(course){\r\n        this.setState({\r\n            title: course.title,\r\n            description: course.description,\r\n            startDate: new Date(course.startDate),\r\n            selectedfrequency:course.frequency,\r\n            address1: course.location.address1,\r\n            address2: course.location.address2,\r\n            city: course.location.city,\r\n            state: course.location.state,\r\n            zip: course.location.postCode,\r\n            cost: course.cost,\r\n            maxMembers: course.maxMembers,\r\n            minMembers: course.minMembers,\r\n            selectedFacilitator: course.facilitator,\r\n            selecteddays:course.repeatDay,\r\n            show: false\r\n        });\r\n\r\n\r\n    };\r\n    handleShow(){\r\n        console.log(\"clicked\");\r\n        this.setState({ show: true });\r\n    };\r\n    onChangeTitle(e) {\r\n        this.setState({\r\n            // e.target.value is the input on the webpage from the user. The state changes to reflect what has been entered\r\n            title: e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangeDescription(e) {\r\n        this.setState({\r\n            description: e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangeStartDate(date) {\r\n        this.setState({\r\n            startDate: date,\r\n        });\r\n\r\n    }\r\n\r\n    onChangeendDate(date) {\r\n        this.setState({\r\n            endDate: date,\r\n        });\r\n    }\r\n\r\n\r\n\r\n    onChangeStartTime(date) {\r\n        this.setState({\r\n            startTime: date,\r\n        });\r\n    }\r\n\r\n    onChangeEndTime(date) {\r\n        this.setState({\r\n            endTime: date,\r\n        });\r\n    }\r\n\r\n    onChangeIntervalDescription(e) {\r\n        this.setState({\r\n            intervalDescription: e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangeAddress1(e) {\r\n        this.setState({\r\n            address1: e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangeAddress2(e) {\r\n        this.setState({\r\n            address2: e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangeAddressCity(e) {\r\n        this.setState({\r\n            city: e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangeAddressState(e) {\r\n        this.setState({\r\n            state: e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangeAddressZip(e) {\r\n        this.setState({\r\n            zip: e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangeMaxMembers(e) {\r\n        this.setState({\r\n            maxMembers: e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangeCost(e) {\r\n        this.setState({\r\n            cost: e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangeBusinessName(e) {\r\n        this.setState({\r\n            businessName: e.target.value,\r\n        });\r\n    }\r\n\r\n    onClickPlwf(e) {\r\n        this.setState({\r\n            plwf: !this.state.plwf,\r\n        });\r\n    }\r\n\r\n    onClickMif(e) {\r\n        this.setState({\r\n            mif: !this.state.mif,\r\n        });\r\n    }\r\n\r\n    onClickConsf(e) {\r\n        this.setState({\r\n            consf: !this.state.consf,\r\n        });\r\n    }\r\n\r\n    onChangeSkillset(e) {\r\n        this.setState({\r\n            priorSkillset: e.target.value,\r\n        });\r\n    }\r\n\r\n    onClickTcs(e) {\r\n        this.setState({\r\n            tcs: !this.state.tcs,\r\n        });\r\n    }\r\n\r\n    onChangeFacilitator(e) {\r\n        this.setState({\r\n            selectedFacilitator: e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangedays(e) {\r\n        var value = this.state.selecteddays.includes(e.target.value)\r\n        if(value === false){\r\n            this.setState({selecteddays: this.state.selecteddays.concat(e.target.value), },()=>{\r\n                    //console.log(this.state.businessSelected)\r\n                }\r\n            );\r\n        }\r\n\r\n    }\r\n    onChangeminMembers(e) {\r\n        this.setState({\r\n            minMembers: e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangefrequency(e) {\r\n        this.setState({\r\n            selectedfrequency: e.target.value,\r\n        });\r\n    }\r\n\r\n    handleValidation(){\r\n\r\n        let formIsValid = true\r\n        this.errors = [];\r\n        this.state.errors = []\r\n       \r\n        //Genre\r\n        if(this.state.genres.length == 0){\r\n          formIsValid = false\r\n          this.errors.push(\"Genre is empty\")\r\n        }\r\n\r\n        //Description\r\n        if(this.state.description.split(' ').length > 300){\r\n          formIsValid = false\r\n          this.errors.push(\"Description word length exceeded 300\")\r\n        }\r\n\r\n\r\n        //Cost\r\n        if(!(/^\\d+$/.test(this.state.cost)) || this.state.cost.length > 10){\r\n          formIsValid = false\r\n          this.errors.push(\"Cost Can only be number or number too long\")\r\n        }\r\n\r\n        //Maximum Members\r\n        if(!(/^\\d+$/.test(this.state.maxMembers)) || this.state.maxMembers.length > 10){\r\n          formIsValid = false\r\n          this.errors.push(\"Maximum Members can only be number or number too long\")\r\n        }\r\n\r\n        //Prior Skillsets required\r\n        if(this.state.priorSkillset.length > 300){\r\n          formIsValid = false\r\n          this.errors.push(\"Prior Skillsets word limit exceeded 300\")\r\n        }\r\n\r\n\r\n        //Address1\r\n        if(this.state.address1.length > 50 || this.state.address1.length == 0){\r\n          formIsValid = false\r\n          this.errors.push(\"Address 1 cannot be empty or exceeed word limit 50\")\r\n        }\r\n\r\n\r\n        //Address2\r\n        if(this.state.address2.length > 50 ){\r\n          formIsValid = false\r\n          this.errors.push(\"Address 2 Exceeeded word limit 50\")\r\n        }\r\n\r\n        //City\r\n        if(!(/^[a-zA-Z]+$/.test(this.state.city)) || this.state.city.length > 50){\r\n          formIsValid = false\r\n          this.errors.push(\"City can only be letters or characters exceeded word limit 50\")\r\n        }\r\n\r\n        //State\r\n        if(this.state.state.length == 0){\r\n          formIsValid = false\r\n          this.errors.push(\"State cannot be empty\")\r\n        }\r\n\r\n        //Zip\r\n        if(!(/^\\d+$/.test(this.state.zip)) || this.state.zip.length > 30){\r\n          formIsValid = false\r\n          this.errors.push(\"Zip can only be number or number too long\")\r\n        }\r\n\r\n        if(this.state.tcs==false){\r\n            formIsValid = false\r\n            this.errors.push(\"Please agree to the Terms and Conditions before you can continue\")\r\n        }\r\n          \r\n\r\n        return formIsValid\r\n\r\n      }\r\n\r\n\r\n    // This is where you send the data to the backend\r\n    handleSubmit(e) {\r\n        this.setState({ errors:[] });\r\n        e.preventDefault();\r\n        if(this.handleValidation()){\r\n        console.log(\"Title: \" + this.state.title);\r\n        console.log(\"Genre: \" + this.state.genre);\r\n        console.log(\"Description: \" + this.state.description);\r\n        console.log(\"Selected Facilitator: \" + this.state.selectedFacilitator);\r\n        console.log(\"Start Date: \" + this.state.startDate);\r\n        console.log(\"end Date: \" + this.state.endDate);\r\n        console.log(\"Start Time: \" + this.state.startTime);\r\n        console.log(\"End Time: \" + this.state.endTime);\r\n    \r\n        console.log(\"Cost: \" + this.state.cost);\r\n        console.log(\"Maximum Members: \" + this.state.maxMembers);\r\n        console.log(\"Minmum Members: \" + this.state.minMembers);\r\n\r\n\r\n        console.log(\"Address1: \" + this.state.address1);\r\n        console.log(\"Address2: \" + this.state.address2);\r\n        console.log(\"City: \" + this.state.city);\r\n        console.log(\"State: \" + this.state.state);\r\n        console.log(\"Zip: \" + this.state.zip);\r\n        \r\n       \r\n        console.log(\"day: \" + this.state.selectedfrequency);\r\n        console.log(this.state.id)\r\n        console.log(this.state.selecteddays)\r\n\r\n        BusinessService.uploadCourse(\r\n            this.state.genre,\r\n            this.state.title,\r\n            this.state.description,\r\n            this.state.selectedFacilitator,\r\n            this.state.startDate,\r\n            this.state.endDate,\r\n            this.state.startTime,\r\n            this.state.endTime,\r\n            this.state.selecteddays,\r\n            this.state.selectedfrequency,\r\n            this.state.address1,\r\n            this.state.address2,\r\n            this.state.city,\r\n            this.state.state,\r\n            this.state.zip,\r\n            this.state.maxMembers,\r\n            this.state.minMembers,\r\n            this.state.id,\r\n            this.state.cost,\r\n        ).catch((error) =>{\r\n            if(error.response){\r\n                console.log(error.response.data);\r\n                this.errors.push(error.response.data);\r\n            }else{\r\n                this.errors.push(\"Course Application Succesful\");\r\n            }\r\n\r\n\r\n        });\r\n        e.preventDefault();\r\n\r\n        }\r\n        else {\r\n            console.log(\"Error submitting course\")\r\n\r\n            let errors = this.errors\r\n            if (this.errors.length > 0) {\r\n                this.setState({errors});\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n            <header className=\"jumbotron\">\r\n            <h3>Apply to Create a Course</h3>\r\n\r\n        <>\r\n\r\n        <Button variant=\"primary\" onClick={this.handleShow} type=\"button\">\r\n            Import from history courses\r\n        </Button>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n            <Modal.Header closeButton>\r\n        <Modal.Title>History Courses</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Table>\r\n        <thead>\r\n        <th>Course Name</th>\r\n        <th>Start Date</th>\r\n        <th>Facilitator</th>\r\n        <th></th>\r\n        </thead>\r\n        <tbody>\r\n        {/* Map each value */}\r\n        {this.state.historyCourses.map((course) => {\r\n            return (\r\n                <tr>\r\n                {/* Need to have the course as a link, to display a full page with the course's details */}\r\n                <td>{course.title}</td>\r\n                <td>{course.startDate}</td>\r\n                <td>{course.facilitator}</td>\r\n                <Button variant=\"primary\" onClick={() => this.handleImport(course)}>\r\n            Import\r\n            </Button>\r\n            </tr>\r\n        );\r\n        })}\r\n    </tbody>\r\n        </Table>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            Close\r\n            </Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n            </>\r\n            <Form onSubmit={this.handleSubmit}>\r\n\r\n            {/* Title  */}\r\n            <Form.Group>\r\n            <Form.Label>Title</Form.Label>\r\n            <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Enter title here\"\r\n        value={this.state.title}\r\n        onChange={this.onChangeTitle}\r\n        />\r\n        </Form.Group>\r\n        {/* Genre   */} {/* Genre doesn't get set in state */}\r\n    <Form.Group>\r\n        <Form.Label>Genre(s)</Form.Label>\r\n        <Form.Control\r\n        as=\"select\"\r\n        multiple\r\n        //value={this.state.genre}\r\n        //onChange={this.onChangeGenre}\r\n        >\r\n        {this.state.genres.map(function (genre) {\r\n                return (\r\n                    <option key={genre} value={genre}>\r\n                    {genre}\r\n                    </option>\r\n            );\r\n            })}\r\n        </Form.Control>\r\n        </Form.Group>\r\n        {/* Description  */}\r\n    <Form.Group>\r\n        <Form.Label>Description</Form.Label>\r\n        <Form.Control\r\n        as=\"textarea\"\r\n        type=\"text\"\r\n        placeholder=\"Enter description here\"\r\n        value={this.state.description}\r\n        onChange={this.onChangeDescription}\r\n        />\r\n        </Form.Group>\r\n        {/* Course Image */}\r\n    <Form.Label>Course Image</Form.Label>\r\n        <Form.File />\r\n        <br />\r\n        {/* Date  */}\r\n        <Form.Row>\r\n        <Form.Group as={Col}>\r\n            <Form.Label>Start Date</Form.Label>\r\n        <DatePicker\r\n        selected={this.state.startDate}\r\n        onChange={this.onChangeStartDate}\r\n        />\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col}>\r\n            <Form.Label>End Date</Form.Label>\r\n        <DatePicker\r\n        selected={this.state.endDate}\r\n        onChange={this.onChangeendDate}\r\n        />\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col}>\r\n            <Form.Label>Start Time</Form.Label>\r\n        <DatePicker\r\n        selected={this.state.startTime}\r\n        onChange={this.onChangeStartTime}\r\n        showTimeSelect\r\n        showTimeSelectOnly\r\n        timeIntervals={15}\r\n        timeCaption=\"Time\"\r\n        dateFormat=\"h:mm aa\"\r\n        />\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col}>\r\n            <Form.Label>End Time</Form.Label>\r\n        <DatePicker\r\n        selected={this.state.endTime}\r\n        onChange={this.onChangeEndTime}\r\n        showTimeSelect\r\n        showTimeSelectOnly\r\n        timeIntervals={15}\r\n        timeCaption=\"Time\"\r\n        dateFormat=\"h:mm aa\"\r\n            />\r\n            </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n            {/*frequency */}\r\n\r\n            <Form.Label>Set days</Form.Label>\r\n\r\n        <Form.Group as={Col}>\r\n        <Form.Control\r\n        as=\"select\"\r\n        multiple={true}\r\n        value={this.state.selecteddays}\r\n        onChange={this.onChangedays}\r\n\r\n            >\r\n            {this.state.days.map((e) => {\r\n                    return (\r\n                        <option key={e} value={e}>\r\n                        {e}\r\n                        </option>\r\n                );\r\n                })}\r\n            </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Label>Set Frequency</Form.Label>\r\n        <Form.Group as={Col}>\r\n        <Form.Control\r\n        as=\"select\"\r\n        value={this.state.selectedfrequency}\r\n        onChange={this.onChangefrequency}\r\n            >\r\n            <option value=\"\" disabled>\r\n        Choose...\r\n    </option>\r\n        {this.state.frequency.map((x) => {\r\n            return (\r\n                <option key={x} value={x}>\r\n                {x}\r\n                </option>\r\n        );\r\n        })}\r\n    </Form.Control>\r\n        </Form.Group>\r\n\r\n\r\n        </Form.Row>\r\n\r\n        {/* Interval Description  */}\r\n\r\n    <Form.Row>\r\n        <Form.Group as={Col}>\r\n            <Form.Label>Cost</Form.Label>\r\n            <Form.Control\r\n        type=\"int\"\r\n        value={this.state.cost}\r\n        onChange={this.onChangeCost}\r\n        />\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n            <Form.Label>Maximum Members</Form.Label>\r\n        <Form.Control\r\n        type=\"int\"\r\n        value={this.state.maxMembers}\r\n        onChange={this.onChangeMaxMembers}\r\n        />\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col}>\r\n            <Form.Label>Minimum Members</Form.Label>\r\n        <Form.Control\r\n        type=\"int\"\r\n        value={this.state.minMembers}\r\n        onChange={this.onChangeminMembers}\r\n        />\r\n        </Form.Group>\r\n\r\n        </Form.Row>\r\n        <br />\r\n        {/* Pre-requisites */}\r\n        <Form.Label>Pre-Requisites</Form.Label>\r\n        <hr />\r\n        {/* Number of Pre-requisites  */}\r\n        <Form.Group>\r\n        <Form.Check\r\n        type=\"checkbox\"\r\n        selected={this.state.plwf}\r\n        label=\"Public Liability Waiver Form\"\r\n        onClick={this.onClickPlwf}\r\n        />\r\n\r\n        <Form.Check\r\n        type=\"checkbox\"\r\n        selected={this.state.mif}\r\n        label=\"Medical Indemnity Form\"\r\n        onClick={this.onClickMif}\r\n        />\r\n\r\n        <Form.Check\r\n        type=\"checkbox\"\r\n        selected={this.state.consf}\r\n        label=\"(Minor) Consent Form\"\r\n        onClick={this.onClickConsf}\r\n        />\r\n\r\n        <br />\r\n\r\n        <Form.Control\r\n        as=\"textarea\"\r\n        type=\"text\"\r\n        placeholder=\"Other prior skillsets necessary\"\r\n        value={this.state.priorSkillset}\r\n        onChange={this.onChangeSkillset}\r\n        />\r\n        </Form.Group>\r\n        <br />\r\n        {/* Location  */} {/* Need to flesh out location */}\r\n    <Form.Label>Location</Form.Label>\r\n        <hr />\r\n        <Form.Group>\r\n        <Form.Label>Address</Form.Label>\r\n        <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"1234 Main St\"\r\n        value={this.state.address1}\r\n        onChange={this.onChangeAddress1}\r\n        />\r\n        </Form.Group>\r\n        <Form.Group>\r\n        <Form.Label>Address 2</Form.Label>\r\n        <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Apartment, studio, or floor\"\r\n        value={this.state.address2}\r\n        onChange={this.onChangeAddress2}\r\n        />\r\n        </Form.Group>\r\n        <Form.Row>\r\n        <Form.Group as={Col}>\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control\r\n        type=\"text\"\r\n        value={this.state.city}\r\n        onChange={this.onChangeAddressCity}\r\n        />\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n        <Form.Label>State</Form.Label>\r\n        <Form.Control\r\n        as=\"select\"\r\n        value={this.state.state}\r\n        onChange={this.onChangeAddressState}\r\n            >\r\n            <option value=\"\" disabled>\r\n        Choose...\r\n    </option>\r\n        <option>ACT</option>\r\n        <option>NSW</option>\r\n        <option>NT</option>\r\n        <option>QLD</option>\r\n        <option>SA</option>\r\n        <option>TAS</option>\r\n        <option>VIC</option>\r\n        <option>WA</option>\r\n        </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n            <Form.Label>Zip</Form.Label>\r\n            <Form.Control\r\n        type=\"text\"\r\n        value={this.state.zip}\r\n        onChange={this.onChangeAddressZip}\r\n        />\r\n        </Form.Group>\r\n        </Form.Row>\r\n        <br />\r\n        {/* Business Contact */}\r\n        <Form.Label>Business</Form.Label>\r\n        <hr />\r\n        <Form.Group>\r\n        {/* API to call business name to display here */}\r\n        <Form.Control\r\n        type=\"text\"\r\n        value={this.state.businessName}\r\n        readOnly\r\n        />\r\n        </Form.Group>\r\n        <br />\r\n        {/* Facilitator Contact */}\r\n        {/* <hr /> */}\r\n    <Form.Label>Facilitator Contact</Form.Label>\r\n        <hr />\r\n        <Form.Group as={Col}>\r\n        <Form.Control\r\n        as=\"select\"\r\n        value={this.state.selectedFacilitator}\r\n        onChange={this.onChangeFacilitator}\r\n            >\r\n            <option value=\"\" disabled>\r\n        Choose...\r\n    </option>\r\n        {this.state.facilitatorList.map((facilitator) => {\r\n            return (\r\n                <option key={facilitator} value={facilitator}>\r\n                {facilitator}\r\n                </option>\r\n        );\r\n        })}\r\n    </Form.Control>\r\n        </Form.Group>\r\n        <br />\r\n        {/* Facilitator Image */}\r\n        {/* <Form.Label>Profile Picture</Form.Label>\r\n              <Form.File />\r\n              <br /> */}\r\n        {/* Retrieve T&Cs Agreement  */}\r\n    <Form.Row>\r\n        <Form.Group as={Col}>\r\n            <Link to=\"/termsandconditions\">Terms and Conditions</Link>\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n            <Form.Check\r\n        type=\"checkbox\"\r\n        selected={this.state.tcs}\r\n        label=\"I agree to the Terms and Conditions\"\r\n        onClick={this.onClickTcs}\r\n        />\r\n        </Form.Group>\r\n        </Form.Row>\r\n        <br />\r\n        {/* Button  */}\r\n        <Form.Group>\r\n        {errors.map(error => (\r\n            <p key={error}>{error}</p>\r\n            ))}\r\n\r\n        <Button type=\"submit\">Submit for Approval</Button>\r\n                                         </Form.Group>\r\n                                         </Form>\r\n                                         </header>\r\n                                         </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/CourseDetail.css\";\r\nimport BusinessService from \"../services/business.service\";\r\nfunction compareUsername( a, b ) {\r\n    if ( a.username < b.username ){\r\n        return -1;\r\n    }\r\n    if ( a.username > b.username ){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nclass BusinessCourseDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        BusinessService.getBusinessOneCourse(this.props.match.params.id).then(\r\n            response => {\r\n                var course=response.data[0];\r\n                var enrolledMembers=course.enrolledMembers;\r\n                enrolledMembers.sort(compareUsername);\r\n                course.enrolledMembers=enrolledMembers;\r\n                this.setState({\r\n                    course: course\r\n                });\r\n                console.log(this.state.course);\r\n            },\r\n        ).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <img src=\"https://picsum.photos/1000/500\" alt=\"\" />\r\n            {this.state.course ? (\r\n\r\n                    <div>\r\n                    <p>\r\n                    <b>Title: </b>\r\n        {this.state.course.title}\r\n    </p>\r\n        <p>\r\n        <b>Description: </b>\r\n        {this.state.course.description}\r\n    </p>\r\n        <p>\r\n        <b>Facilitator: </b>\r\n        {this.state.course.facilitator}\r\n    </p>\r\n        <p>\r\n        <b>Date: </b>\r\n        {new Date(this.state.course.startDate).toISOString().replace('-', '/').split('T')[0].replace('-', '/').concat(\r\n            \" - \",\r\n            new Date(this.state.course.endDate).toISOString().replace('-', '/').split('T')[0].replace('-', '/')\r\n        )}\r\n    </p>\r\n        <p>\r\n        <b>Time: </b>\r\n        {new Date(this.state.course.startTime).toLocaleString([], {hour: '2-digit', minute:'2-digit'}).concat(\r\n            \" - \",\r\n            new Date(this.state.course.endTime).toLocaleString([], {hour: '2-digit', minute:'2-digit'})\r\n        )}\r\n    </p>\r\n        <p>\r\n        <b>Repeat Day: </b>\r\n        {this.state.course.repeatDay.join(', ')}\r\n    </p>\r\n        <p>\r\n        <b>Location: </b>\r\n        {this.state.course.location.address1.concat(\r\n            \", \",\r\n            this.state.course.location.address2,\r\n            \", \",\r\n            this.state.course.location.city,\r\n            \", \",\r\n            this.state.course.location.state,\r\n            \", \",\r\n            this.state.course.location.postCode,\r\n        )}\r\n    </p>\r\n        <p>\r\n        <b>Maximum Members: </b>\r\n        {this.state.course.maxMembers}\r\n    </p>\r\n\r\n        <p>\r\n        <b>Minimum Members: </b>\r\n        {this.state.course.minMembers}\r\n    </p>\r\n        <p>\r\n        <b>Cost: </b>\r\n        {this.state.course.cost} AUD\r\n    </p>\r\n        <p>\r\n        <b>Enrolled Members: </b>\r\n        {this.state.course.enrolledMembers.map((member) => {\r\n            return (\r\n                <p>{member.username.concat(\r\n                        \" / \",\r\n                        member.email\r\n                    )}</p>\r\n        )})}\r\n    </p>\r\n        </div>\r\n\r\n                ):null}\r\n\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default BusinessCourseDetail;\r\n","import React, { Component } from \"react\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Table,Form, Button, Col, Modal } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AdminService from \"../services/admin.service\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\n\r\nexport default class BoardFacilitator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            courses: [],\r\n        };\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminService.getBusinessCoursesInAdminPage(this.props.match.params.accountId).then(\r\n            response => {\r\n                this.setState({\r\n                    courses: response.data\r\n                });\r\n                console.log(this.state.courses);\r\n                console.log(this.state.courses.length);\r\n            },\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n        <div className=\"row row-cols-1 row-cols-md-2\">\r\n            {this.state.courses.map((course) => {\r\n                    return (\r\n                        <div className=\"col mb-4\">\r\n                        <div className=\"card\">\r\n                        <img src=\"https://picsum.photos/1000/300\" alt=\"\" />\r\n                        <div className=\"card-body\">\r\n                        <h5>\r\n                        <Link to={`/admin/${this.props.match.params.accountId}/${course._id}`}>\r\n                    {course.title}\r\n                </Link>\r\n                    </h5>\r\n                    <p>\r\n                    <b>Facilitator: </b>\r\n                    {course.facilitator}\r\n                </p>\r\n                    <p>\r\n                    <b>Date: </b>\r\n                    {new Date(course.startDate).toISOString().replace('-', '/').split('T')[0].replace('-', '/').concat(\r\n                        \" - \",\r\n                        new Date(course.endDate).toISOString().replace('-', '/').split('T')[0].replace('-', '/')\r\n                    )}\r\n                </p>\r\n                    <p>\r\n                    <b>Time: </b>\r\n                    {new Date(course.startTime).toLocaleString([], {hour: '2-digit', minute:'2-digit'}).concat(\r\n                        \" - \",\r\n                        new Date(course.endTime).toLocaleString([], {hour: '2-digit', minute:'2-digit'})\r\n                    )}\r\n                </p>\r\n                    <p>\r\n                    <b>Repeat Day: </b>\r\n                    {course.repeatDay.join(', ')}\r\n                </p>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                );\r\n                })}\r\n            </div>\r\n            </div>\r\n    );\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/CourseDetail.css\";\r\nimport AdminService from \"../services/admin.service\";\r\nfunction compareUsername( a, b ) {\r\n    if ( a.username < b.username ){\r\n        return -1;\r\n    }\r\n    if ( a.username > b.username ){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nclass BusinessCourseDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminService.getBusinessOneCourseInAdminPage(this.props.match.params.accountId, this.props.match.params.courseId).then(\r\n            response => {\r\n                var course=response.data[0];\r\n                var enrolledMembers=course.enrolledMembers;\r\n                enrolledMembers.sort(compareUsername);\r\n                course.enrolledMembers=enrolledMembers;\r\n                this.setState({\r\n                    course: course\r\n                });\r\n                console.log(this.state.course);\r\n            },\r\n        ).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <img src=\"https://picsum.photos/1000/500\" alt=\"\" />\r\n            {this.state.course ? (\r\n\r\n                    <div>\r\n                    <p>\r\n                    <b>Title: </b>\r\n        {this.state.course.title}\r\n    </p>\r\n        <p>\r\n        <b>Description: </b>\r\n        {this.state.course.description}\r\n    </p>\r\n        <p>\r\n        <b>Facilitator: </b>\r\n        {this.state.course.facilitator}\r\n    </p>\r\n        <p>\r\n        <b>Date: </b>\r\n        {new Date(this.state.course.startDate).toISOString().replace('-', '/').split('T')[0].replace('-', '/').concat(\r\n            \" - \",\r\n            new Date(this.state.course.endDate).toISOString().replace('-', '/').split('T')[0].replace('-', '/')\r\n        )}\r\n    </p>\r\n        <p>\r\n        <b>Time: </b>\r\n        {new Date(this.state.course.startTime).toLocaleString([], {hour: '2-digit', minute:'2-digit'}).concat(\r\n            \" - \",\r\n            new Date(this.state.course.endTime).toLocaleString([], {hour: '2-digit', minute:'2-digit'})\r\n        )}\r\n    </p>\r\n        <p>\r\n        <b>Repeat Day: </b>\r\n        {this.state.course.repeatDay.join(', ')}\r\n    </p>\r\n        <p>\r\n        <b>Location: </b>\r\n        {this.state.course.location.address1.concat(\r\n            \", \",\r\n            this.state.course.location.address2,\r\n            \", \",\r\n            this.state.course.location.city,\r\n            \", \",\r\n            this.state.course.location.state,\r\n            \", \",\r\n            this.state.course.location.postCode,\r\n        )}\r\n    </p>\r\n        <p>\r\n        <b>Maximum Members: </b>\r\n        {this.state.course.maxMembers}\r\n    </p>\r\n\r\n        <p>\r\n        <b>Minimum Members: </b>\r\n        {this.state.course.minMembers}\r\n    </p>\r\n        <p>\r\n        <b>Cost: </b>\r\n        {this.state.course.cost} AUD\r\n    </p>\r\n        <p>\r\n        <b>Enrolled Members: </b>\r\n        {this.state.course.enrolledMembers.map((member) => {\r\n            return (\r\n                <p>{member.username.concat(\r\n                        \" / \",\r\n                        member.email\r\n                    )}</p>\r\n        )})}\r\n    </p>\r\n        </div>\r\n\r\n    ):null}\r\n\r\n    </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default BusinessCourseDetail;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Login from \"./RegisterAndLoginPages/login.component\";\r\nimport Register from \"./RegisterAndLoginPages/register.component\";\r\nimport Home from \"./OtherCommonPages/home.component\";\r\nimport Profile from \"./OtherCommonPages/profile.component\";\r\nimport BoardUser from \"./OtherCommonPages/board-user.component\";\r\nimport BoardFacilitator from \"./BusinessPage/board-business.component\";\r\nimport BoardAdmin from \"./AdminPage/board-admin.component\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport Confirmation from \"./OtherCommonPages/confirmation.component\";\r\n\r\nimport CourseDetail from \"./CoursePage/CourseDetail\";\r\nimport CourseList from \"./CoursePage/CourseList\";\r\nimport Courses from \"./CoursePage/Courses\";\r\n\r\nimport AdminApproval from \"./AdminPage/board-admin.component\";\r\nimport AdminCourseApproval from \"./AdminPage/AdminCourseApproval\";\r\nimport AdminBusinessApproval from \"./AdminPage/AdminBusinessApproval\";\r\nimport BusinessRegistration from \"./BusinessRegistrationPage/BusinessRegistration\";\r\nimport BusinessUploadCourse from \"./BusinessPage/BusinessUploadCourse\"\r\nimport BusinessCourseDetail from \"./BusinessPage/BusinessCourseDetail\"\r\nimport AdminPageBusinessDetail from \"./AdminPage/AdminPage-BusinessDetail\"\r\nimport AdminPageBusinessCourseDetail from \"./AdminPage/AdminPage-BusinessCourseDetail\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showFacilitatorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showFacilitatorBoard: user.roles.includes(\"ROLE_BUSINESS\"),\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, showFacilitatorBoard, showAdminBoard } = this.state;\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <Link to={\"/\"} className=\"navbar-brand\">\r\n              Reboot Retreats\r\n            </Link>\r\n\r\n            <div className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/home\"} className=\"nav-link\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n\r\n              {showFacilitatorBoard && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/facilitator\"} className=\"nav-link\">\r\n                    Facilitator Board\r\n                  </Link>\r\n                </li>\r\n              )}\r\n\r\n              {showAdminBoard && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/admin\"} className=\"nav-link\">\r\n                    Admin Board\r\n                  </Link>\r\n                </li>\r\n              )}\r\n\r\n              {currentUser && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/user\"} className=\"nav-link\">\r\n                    User\r\n                  </Link>\r\n                </li>\r\n              )}\r\n              <li className=\"navbar-item\">\r\n                <Link to=\"/courses\" className=\"nav-link\">\r\n                  Courses\r\n                </Link>\r\n              </li>\r\n\r\n             {currentUser && !showFacilitatorBoard && !showAdminBoard &&(\r\n              <li className=\"navbar-item\">\r\n                <Link to=\"/businessRegistration\" className=\"nav-link\">\r\n                  Business Registration\r\n                </Link>\r\n              </li>\r\n             )}\r\n              \r\n\r\n\r\n            </div>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/profile\"} className=\"nav-link\">\r\n                    {currentUser.username}\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                    LogOut\r\n                  </a>\r\n                </li>\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\">\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/register\"} className=\"nav-link\">\r\n                    Sign Up\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            )}\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/profile\" component={Profile} />\r\n              <Route path=\"/user\" component={BoardUser} />\r\n              <Route exact path=\"/facilitator\" component={BoardFacilitator} />\r\n      {showAdminBoard ? <Route path=\"/admin\" exact component={BoardAdmin} /> : null}\r\n              <Route path=\"/courses\" exact component={Courses} />\r\n              <Route path=\"/courses/:category\" exact component={CourseList} />\r\n              <Route\r\n                path=\"/courses/:category/:id\"\r\n                exact\r\n                component={CourseDetail}\r\n              />\r\n\r\n\r\n              <Route path=\"/adminApproval\" exact component={AdminApproval} />\r\n              <Route\r\n                path=\"/adminApproval/courses\"\r\n                exact\r\n                component={AdminCourseApproval}\r\n              />\r\n            \r\n\r\n              <Route\r\n                path=\"/adminApproval/businesses\"\r\n                exact\r\n                component={AdminBusinessApproval}\r\n              />\r\n              <Route\r\n                path=\"/businessRegistration\"\r\n                exact\r\n                component={BusinessRegistration}\r\n              />\r\n              <Route\r\n          path=\"/facilitator/uploadCourse\"\r\n          exact\r\n          component={BusinessUploadCourse}\r\n          />\r\n          <Route\r\n          path=\"/facilitator/:id\"\r\n          exact\r\n          component={BusinessCourseDetail}\r\n          />\r\n          <Route\r\n          path=\"/admin/:accountId\"\r\n          exact\r\n          component={AdminPageBusinessDetail}\r\n          />\r\n          <Route\r\n          path=\"/admin/:accountId/:courseId\"\r\n          exact\r\n          component={AdminPageBusinessCourseDetail}\r\n          />\r\n\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}