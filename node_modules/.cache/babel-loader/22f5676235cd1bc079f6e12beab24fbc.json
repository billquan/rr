{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from './auth-header';\nconst API_URL = \"http://localhost:5000/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios.post(API_URL + \"signin\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n      \"roles\": [\"user\"]\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  refreshCurrentUser() {\n    return axios.get(API_URL + \"refresh\", {\n      headers: authHeader()\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  confirm(token) {\n    return axios.post(API_URL + \"confirmation\", {\n      token\n    });\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["C:/Users/Bill Quan/Desktop/fit3171/fit4002/rr1/src/services/auth.service.js"],"names":["axios","authHeader","API_URL","AuthService","login","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","register","email","getCurrentUser","parse","getItem","refreshCurrentUser","get","headers","confirm","token"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,MAAMC,OAAO,GAAG,iCAAhB;;AAEA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACtB,WAAON,KAAK,CACPO,IADE,CACGL,OAAO,GAAG,QADb,EACuB;AACtBG,MAAAA,QADsB;AAEtBC,MAAAA;AAFsB,KADvB,EAKFE,IALE,CAKGC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;AAC3BC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B;AACH;;AAED,aAAOD,QAAQ,CAACC,IAAhB;AACH,KAXE,CAAP;AAYH;;AAEDM,EAAAA,MAAM,GAAG;AACLJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACH;;AAEDC,EAAAA,QAAQ,CAACb,QAAD,EAAWc,KAAX,EAAkBb,QAAlB,EAA4B;AAChC,WAAON,KAAK,CAACO,IAAN,CAAWL,OAAO,GAAG,QAArB,EAA+B;AAClCG,MAAAA,QADkC;AAElCc,MAAAA,KAFkC;AAGlCb,MAAAA,QAHkC;AAIlC,eAAQ,CAAC,MAAD;AAJ0B,KAA/B,CAAP;AAMH;;AAEDc,EAAAA,cAAc,GAAG;AACb,WAAON,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,WAAOvB,KAAK,CAACwB,GAAN,CAAUtB,OAAO,GAAG,SAApB,EAA+B;AAAEuB,MAAAA,OAAO,EAAExB,UAAU;AAArB,KAA/B,EAA0DO,IAA1D,CAA+DC,QAAQ,IAAI;AAC9E,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;AAC3BC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B;AACH;;AAED,aAAOD,QAAQ,CAACC,IAAhB;AACH,KANM,CAAP;AAOH;;AAEDgB,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACX,WAAO3B,KAAK,CAACO,IAAN,CAAWL,OAAO,GAAG,cAArB,EAAqC;AACxCyB,MAAAA;AADwC,KAArC,CAAP;AAGH;;AA/Ca;;AAkDlB,eAAe,IAAIxB,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\nimport authHeader from './auth-header';\r\nconst API_URL = \"http://localhost:5000/api/auth/\";\r\n\r\nclass AuthService {\r\n    login(username, password) {\r\n        return axios\r\n            .post(API_URL + \"signin\", {\r\n                username,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    register(username, email, password) {\r\n        return axios.post(API_URL + \"signup\", {\r\n            username,\r\n            email,\r\n            password,\r\n            \"roles\":[\"user\"]\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n\r\n    refreshCurrentUser(){\r\n        return axios.get(API_URL + \"refresh\", { headers: authHeader() }).then(response => {\r\n            if (response.data.accessToken) {\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n            }\r\n\r\n            return response.data;\r\n        });\r\n    }\r\n\r\n    confirm(token) {\r\n        return axios.post(API_URL + \"confirmation\", {\r\n            token\r\n        });\r\n    }\r\n}\r\n\r\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}