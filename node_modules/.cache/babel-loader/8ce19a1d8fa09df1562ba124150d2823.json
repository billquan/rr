{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Bill Quan\\\\Desktop\\\\fit3171\\\\fit4002\\\\rr1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Bill Quan\\\\Desktop\\\\fit3171\\\\fit4002\\\\rr1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Bill Quan\\\\Desktop\\\\fit3171\\\\fit4002\\\\rr1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Bill Quan\\\\Desktop\\\\fit3171\\\\fit4002\\\\rr1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import AdminService from\"../services/admin.service\";import{Table,Button,CardGroup,Card}from\"react-bootstrap\";import{Link}from\"react-router-dom\";function compare(a,b){if(a[1].businessName.toUpperCase()<b[1].businessName.toUpperCase()){return-1;}if(a[1].businessName.toUpperCase()>b[1].businessName.toUpperCase()){return 1;}return 0;}var BoardAdmin=/*#__PURE__*/function(_Component){_inherits(BoardAdmin,_Component);var _super=_createSuper(BoardAdmin);function BoardAdmin(){var _this;_classCallCheck(this,BoardAdmin);_this=_super.call(this);_this.state={courseApplications:[],businesses:[]};return _this;}_createClass(BoardAdmin,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;AdminService.getBusinessAccounts().then(function(response){_this2.setState({businesses:response.data.sort(compare)});console.log(_this2.state.businesses);console.log(_this2.state.businesses.length);});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Admin Space\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CardGroup,null,/*#__PURE__*/React.createElement(Card,{style:{width:'18rem'}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,\"Course Approval\"),/*#__PURE__*/React.createElement(Card.Text,null,\"These are courses submitted by facilitors, please review carefully. Once a decision is made, the system will automatically send an email to inform the applicant\"),/*#__PURE__*/React.createElement(Button,{href:\"adminApproval/courses\"},\"Check the List\"))),/*#__PURE__*/React.createElement(Card,{style:{width:'18rem'}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,\"Business Approval\"),/*#__PURE__*/React.createElement(Card.Text,null,\"These are Businesses registered by users, please review carefully. Once a decision is made, the system will automatically send an email to inform the applicant\"),/*#__PURE__*/React.createElement(Button,{href:\"adminApproval/businesses\"},\"Check the List\"))))),/*#__PURE__*/React.createElement(\"p\",null,\"  \"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Business Account List\")),/*#__PURE__*/React.createElement(\"p\",null,\"  \"),this.state.businesses.map(function(business){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h5\",null,/*#__PURE__*/React.createElement(Link,{to:\"/admin/\".concat(business[0]._id)},business[1].businessName)),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Business Structure: \"),business[1].businessStructure),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Phone: \"),business[1].phone));}));}}]);return BoardAdmin;}(Component);export{BoardAdmin as default};","map":{"version":3,"sources":["C:/Users/Bill Quan/Desktop/fit3171/fit4002/rr1/src/AdminPage/board-admin.component.js"],"names":["React","Component","AdminService","Table","Button","CardGroup","Card","Link","compare","a","b","businessName","toUpperCase","BoardAdmin","state","courseApplications","businesses","getBusinessAccounts","then","response","setState","data","sort","console","log","length","width","map","business","_id","businessStructure","phone"],"mappings":"grBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,SAAxB,CAAmCC,IAAnC,KAA8C,iBAA9C,CACA,OAASC,IAAT,KAAqB,kBAArB,CAGA,QAASC,CAAAA,OAAT,CAAkBC,CAAlB,CAAqBC,CAArB,CAAyB,CACrB,GAAKD,CAAC,CAAC,CAAD,CAAD,CAAKE,YAAL,CAAkBC,WAAlB,GAAkCF,CAAC,CAAC,CAAD,CAAD,CAAKC,YAAL,CAAkBC,WAAlB,EAAvC,CAAuE,CACnE,MAAO,CAAC,CAAR,CACH,CACD,GAAKH,CAAC,CAAC,CAAD,CAAD,CAAKE,YAAL,CAAkBC,WAAlB,GAAkCF,CAAC,CAAC,CAAD,CAAD,CAAKC,YAAL,CAAkBC,WAAlB,EAAvC,CAAwE,CACpE,MAAO,EAAP,CACH,CACD,MAAO,EAAP,CACH,C,GAEoBC,CAAAA,U,wGACjB,qBAAc,4CACV,wBACA,MAAKC,KAAL,CAAa,CACXC,kBAAkB,CAAE,EADT,CAEXC,UAAU,CAAC,EAFA,CAAb,CAFU,aAMX,C,oFAEiB,iBAChBd,YAAY,CAACe,mBAAb,GAAmCC,IAAnC,CACI,SAAAC,QAAQ,CAAI,CACR,MAAI,CAACC,QAAL,CAAc,CACVJ,UAAU,CAAEG,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBd,OAAnB,CADF,CAAd,EAGAe,OAAO,CAACC,GAAR,CAAY,MAAI,CAACV,KAAL,CAAWE,UAAvB,EACAO,OAAO,CAACC,GAAR,CAAY,MAAI,CAACV,KAAL,CAAWE,UAAX,CAAsBS,MAAlC,EACH,CAPL,EASH,C,uCAIU,CACP,mBACE,4CAEE,4CAFF,cAKE,4CACA,oBAAC,SAAD,mBACE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAb,eAEA,oBAAC,IAAD,CAAM,IAAN,mBACA,oBAAC,IAAD,CAAM,KAAN,wBADA,cAEA,oBAAC,IAAD,CAAM,IAAN,yKAFA,cAOA,oBAAC,MAAD,EAAQ,IAAI,CAAC,uBAAb,mBAPA,CAFA,CADF,cAeE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEA,KAAK,CAAE,OAAT,CAAb,eAEA,oBAAC,IAAD,CAAM,IAAN,mBACA,oBAAC,IAAD,CAAM,KAAN,0BADA,cAEA,oBAAC,IAAD,CAAM,IAAN,wKAFA,cAMA,oBAAC,MAAD,EAAQ,IAAI,CAAC,0BAAb,mBANA,CAFA,CAfF,CADA,CALF,cA6CI,kCA7CJ,cA+CE,4CACE,sDADF,CA/CF,cAkDA,kCAlDA,CAmDK,KAAKZ,KAAL,CAAWE,UAAX,CAAsBW,GAAtB,CAA0B,SAACC,QAAD,CAAc,CACjC,mBACI,4CACA,2CACA,oBAAC,IAAD,EAAM,EAAE,kBAAYA,QAAQ,CAAC,CAAD,CAAR,CAAYC,GAAxB,CAAR,EACHD,QAAQ,CAAC,CAAD,CAAR,CAAYjB,YADT,CADA,CADA,cAMJ,0CACA,oDADA,CAECiB,QAAQ,CAAC,CAAD,CAAR,CAAYE,iBAFb,CANI,cAUR,0CACA,uCADA,CAECF,QAAQ,CAAC,CAAD,CAAR,CAAYG,KAFb,CAVQ,CADJ,CAiBH,CAlBJ,CAnDL,CADF,CAkFD,C,wBA1GiC9B,S,SAAnBY,U","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport AdminService from \"../services/admin.service\";\r\nimport { Table, Button, CardGroup, Card} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction compare( a, b ) {\r\n    if ( a[1].businessName.toUpperCase() < b[1].businessName.toUpperCase()){\r\n        return -1;\r\n    }\r\n    if ( a[1].businessName.toUpperCase() > b[1].businessName.toUpperCase() ){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport default class BoardAdmin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          courseApplications: [],\r\n          businesses:[]\r\n        };\r\n      }\r\n\r\n    componentDidMount() {\r\n        AdminService.getBusinessAccounts().then(\r\n            response => {\r\n                this.setState({\r\n                    businesses: response.data.sort(compare)\r\n                });\r\n                console.log(this.state.businesses);\r\n                console.log(this.state.businesses.length);\r\n            },\r\n        );\r\n    }\r\n    \r\n\r\n      \r\n      render() {\r\n        return (\r\n          <div>\r\n            {/* Title */}\r\n            <h1>Admin Space</h1>\r\n    \r\n            {/* Buttons */}\r\n            <div>\r\n            <CardGroup>\r\n              <Card style={{ width: '18rem' }}>\r\n              \r\n              <Card.Body>\r\n              <Card.Title>Course Approval</Card.Title>\r\n              <Card.Text>\r\n\r\n              These are courses submitted by facilitors, please review carefully.\r\nOnce a decision is made, the system will automatically send an email to inform the applicant\r\n              </Card.Text>\r\n              <Button href=\"adminApproval/courses\">Check the List</Button>\r\n              </Card.Body>\r\n              </Card> \r\n\r\n    \r\n              <Card style={{ width: '18rem' }}>\r\n              \r\n              <Card.Body>\r\n              <Card.Title>Business Approval</Card.Title>\r\n              <Card.Text>\r\n              These are Businesses registered by users, please review carefully.\r\nOnce a decision is made, the system will automatically send an email to inform the applicant\r\n              </Card.Text>\r\n              <Button href=\"adminApproval/businesses\">Check the List</Button>\r\n              </Card.Body>\r\n              </Card> \r\n\r\n\r\n\r\n             \r\n\r\n              </CardGroup>\r\n              \r\n\r\n\r\n    \r\n   \r\n            </div>\r\n\r\n              <p>  </p>\r\n\r\n            <div>\r\n              <h3>Business Account List</h3>\r\n              </div>\r\n          <p>  </p>\r\n              {this.state.businesses.map((business) => {\r\n                      return (\r\n                          <div>\r\n                          <h5>\r\n                          <Link to={`/admin/${business[0]._id}`}>\r\n                      {business[1].businessName}\r\n                  </Link>\r\n                      </h5>\r\n                      <p>\r\n                      <b>Business Structure: </b>\r\n                      {business[1].businessStructure}\r\n                  </p>\r\n                  <p>\r\n                  <b>Phone: </b>\r\n                  {business[1].phone}\r\n              </p>\r\n                  </div>\r\n                  );\r\n                  })}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n\r\n          </div>\r\n        );\r\n      }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}