{"ast":null,"code":"var _jsxFileName = \"/Users/jiahaoyu/Desktop/4002/src/Pages/AddInfoToDatabase.js\";\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"; // This is a sample component. It demonstrates how adding information\n// from the user into the database. Could be used for things such as\n// signing up, or a questionnaire.\n\nclass AddInfoToDatabase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      property1: \"\",\n      property2: \"\",\n      property3: 0,\n      property4: new Date(),\n      property5: []\n    };\n    this.onChangeProperty1 = this.onChangeProperty1.bind(this);\n    this.onChangeProperty2 = this.onChangeProperty2.bind(this);\n    this.onChangeProperty3 = this.onChangeProperty3.bind(this);\n    this.onChangeProperty4 = this.onChangeProperty4.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  } // Automatically called before anything is displayed on the page. Before anything loads, this code is run.\n\n\n  componentDidMount() {\n    // Set the state of a property automatically\n    this.setState({\n      property5: [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    });\n  } //   Methods to change state\n\n\n  onChangeProperty1(e) {\n    this.setState({\n      // e.target.value is the input on the webpage from the user. The state changes to reflect what has been entered\n      property1: e.target.value\n    });\n  }\n\n  onChangeProperty2(e) {\n    this.setState({\n      property2: e.target.value\n    });\n  }\n\n  onChangeProperty3(e) {\n    this.setState({\n      property3: e.target.value\n    });\n  }\n\n  onChangeProperty4(date) {\n    this.setState({\n      property4: date\n    });\n  } // Method to handle form submission\n\n\n  onSubmit(e) {\n    e.preventDefault(); // Prevent the default html submit behaviour\n\n    const exampleVar = {\n      property1: this.state.property1,\n      property2: this.state.property2,\n      property3: this.state.property3,\n      property4: this.state.property4\n    };\n    console.log(exampleVar); // This is the part where we submit the data to the database\n    // After the data has been submitted...\n\n    window.location = \"/\"; // Takes the user back to the homepage\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Sample Entry Forum\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Property1: \"), /*#__PURE__*/React.createElement(\"select\", {\n      ref: \"userInput\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.property1,\n      onChange: this.onChangeProperty1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, this.state.property5.map(function (sampleValue) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: sampleValue,\n        value: sampleValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }\n      }, sampleValue);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"Property2: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.property2,\n      onChange: this.onChangeProperty2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"Property3: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.property3,\n      onChange: this.onChangeProperty3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Property4: \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.property4 // Initial selection\n      ,\n      onChange: this.onChangeProperty4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default AddInfoToDatabase;","map":{"version":3,"sources":["/Users/jiahaoyu/Desktop/4002/src/Pages/AddInfoToDatabase.js"],"names":["React","Component","DatePicker","AddInfoToDatabase","constructor","props","state","property1","property2","property3","property4","Date","property5","onChangeProperty1","bind","onChangeProperty2","onChangeProperty3","onChangeProperty4","onSubmit","componentDidMount","setState","e","target","value","date","preventDefault","exampleVar","console","log","window","location","render","map","sampleValue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// This is a sample component. It demonstrates how adding information\n// from the user into the database. Could be used for things such as\n// signing up, or a questionnaire.\n\nclass AddInfoToDatabase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      property1: \"\",\n      property2: \"\",\n      property3: 0,\n      property4: new Date(),\n      property5: [],\n    };\n\n    this.onChangeProperty1 = this.onChangeProperty1.bind(this);\n    this.onChangeProperty2 = this.onChangeProperty2.bind(this);\n    this.onChangeProperty3 = this.onChangeProperty3.bind(this);\n    this.onChangeProperty4 = this.onChangeProperty4.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // Automatically called before anything is displayed on the page. Before anything loads, this code is run.\n  componentDidMount() {\n    // Set the state of a property automatically\n    this.setState({\n      property5: [\"A\", \"B\", \"C\", \"D\", \"E\"],\n    });\n  }\n\n  //   Methods to change state\n\n  onChangeProperty1(e) {\n    this.setState({\n      // e.target.value is the input on the webpage from the user. The state changes to reflect what has been entered\n      property1: e.target.value,\n    });\n  }\n\n  onChangeProperty2(e) {\n    this.setState({\n      property2: e.target.value,\n    });\n  }\n\n  onChangeProperty3(e) {\n    this.setState({\n      property3: e.target.value,\n    });\n  }\n\n  onChangeProperty4(date) {\n    this.setState({\n      property4: date,\n    });\n  }\n\n  // Method to handle form submission\n  onSubmit(e) {\n    e.preventDefault(); // Prevent the default html submit behaviour\n\n    const exampleVar = {\n      property1: this.state.property1,\n      property2: this.state.property2,\n      property3: this.state.property3,\n      property4: this.state.property4,\n    };\n\n    console.log(exampleVar);\n    // This is the part where we submit the data to the database\n\n    // After the data has been submitted...\n    window.location = \"/\"; // Takes the user back to the homepage\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Sample Entry Forum</h3>\n        <form onSubmit={this.onSubmit}>\n          {/* Dropdown select for property 1. The values come from property 5, from the database. */}\n          <div className=\"form-group\">\n            <label>Property1: </label>\n            <select\n              ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.property1}\n              onChange={this.onChangeProperty1}\n            >\n              {this.state.property5.map(function (sampleValue) {\n                return (\n                  <option key={sampleValue} value={sampleValue}>\n                    {sampleValue}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          {/* Text input box for property 2 (Text). */}\n          <div className=\"form-group\">\n            <label>Property2: </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.property2}\n              onChange={this.onChangeProperty2}\n            />\n          </div>\n\n          {/* Text input box for property 3 (Integer). */}\n          <div className=\"form-group\">\n            <label>Property3: </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.property3}\n              onChange={this.onChangeProperty3}\n            />\n          </div>\n\n          {/* Text input box for property 4 (Date). */}\n          <div className=\"form-group\">\n            <label>Property4: </label>\n            <div>\n              {/* DatePicker component pops up a calendar to pick a date. Install a package with npm */}\n              <DatePicker\n                selected={this.state.property4} // Initial selection\n                onChange={this.onChangeProperty4}\n              />\n            </div>\n          </div>\n\n          {/* Button */}\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddInfoToDatabase;\n"]},"metadata":{},"sourceType":"module"}