{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\nconst API_URL = 'http://localhost:5000/api/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'test/all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'test/user', {\n      headers: authHeader()\n    });\n  }\n\n  getFacilitatorBoard() {\n    return axios.get(API_URL + 'test/facilitator', {\n      headers: authHeader()\n    });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'test/admin', {\n      headers: authHeader()\n    });\n  }\n\n  getBusinessCourses() {\n    return axios.get(API_URL + 'business/viewCourses', {\n      headers: authHeader()\n    });\n  }\n\n  getBusinessOneCourse(courseId) {\n    const data = JSON.stringify({\n      \"courseId\": courseId\n    });\n    return axios.post(API_URL + 'business/viewOneCourse', data, {\n      headers: authHeader()\n    });\n  }\n\n  getBusinessAccounts() {\n    return axios.get(API_URL + 'admin/getBusinessAccounts', {\n      headers: authHeader()\n    });\n  }\n\n  getBusinessCoursesInAdminPage(userId) {\n    const data = JSON.stringify({\n      \"userId\": userId\n    });\n    return axios.post(API_URL + 'admin/viewCoursesInAdminPage', data, {\n      headers: authHeader()\n    });\n  }\n\n  getBusinessOneCourseInAdminPage(userId, courseId) {\n    const data = JSON.stringify({\n      \"userId\": userId,\n      \"courseId\": courseId\n    });\n    return axios.post(API_URL + 'admin/viewOneCourseInAdminPage', data, {\n      headers: authHeader()\n    });\n  }\n\n  enrollCourse(userId, courseId, cost, payerId, orderId) {\n    const data = JSON.stringify({\n      \"userId\": userId,\n      \"courseId\": courseId,\n      \"payerId\": payerId,\n      \"paymentId\": paymentId\n    });\n    return axios.post(API_URL + 'enroll', data, {\n      headers: authHeader()\n    });\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["C:/Users/Bill Quan/Desktop/fit3171/fit4002/rr/src/services/user.service.js"],"names":["axios","authHeader","API_URL","UserService","getPublicContent","get","getUserBoard","headers","getFacilitatorBoard","getAdminBoard","getBusinessCourses","getBusinessOneCourse","courseId","data","JSON","stringify","post","getBusinessAccounts","getBusinessCoursesInAdminPage","userId","getBusinessOneCourseInAdminPage","enrollCourse","cost","payerId","orderId","paymentId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,OAAO,GAAG,4BAAhB;;AAEA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,gBAAgB,GAAG;AACf,WAAOJ,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,UAApB,CAAP;AACH;;AAEDI,EAAAA,YAAY,GAAG;AACX,WAAON,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,WAApB,EAAiC;AAAEK,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAAjC,CAAP;AACH;;AAEDO,EAAAA,mBAAmB,GAAG;AAClB,WAAOR,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,kBAApB,EAAwC;AAAEK,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAAxC,CAAP;AACH;;AAEDQ,EAAAA,aAAa,GAAG;AACZ,WAAOT,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,YAApB,EAAkC;AAAEK,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAAlC,CAAP;AACH;;AACDS,EAAAA,kBAAkB,GAAE;AAChB,WAAOV,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,sBAApB,EAA4C;AAAEK,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA5C,CAAP;AACH;;AACDU,EAAAA,oBAAoB,CAACC,QAAD,EAAU;AAC1B,UAAMC,IAAI,GAACC,IAAI,CAACC,SAAL,CAAe;AACtB,kBAAWH;AADW,KAAf,CAAX;AAGA,WAAOZ,KAAK,CAACgB,IAAN,CAAWd,OAAO,GAAG,wBAArB,EAA+CW,IAA/C,EAAqD;AAAEN,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAArD,CAAP;AACH;;AACDgB,EAAAA,mBAAmB,GAAE;AACjB,WAAOjB,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,2BAApB,EAAiD;AAAEK,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAAjD,CAAP;AACH;;AACDiB,EAAAA,6BAA6B,CAACC,MAAD,EAAQ;AACjC,UAAMN,IAAI,GAACC,IAAI,CAACC,SAAL,CAAe;AACtB,gBAASI;AADa,KAAf,CAAX;AAGA,WAAOnB,KAAK,CAACgB,IAAN,CAAWd,OAAO,GAAG,8BAArB,EAAqDW,IAArD,EAA2D;AAAEN,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA3D,CAAP;AACH;;AACDmB,EAAAA,+BAA+B,CAACD,MAAD,EAAQP,QAAR,EAAiB;AAC5C,UAAMC,IAAI,GAACC,IAAI,CAACC,SAAL,CAAe;AACtB,gBAASI,MADa;AAEtB,kBAAWP;AAFW,KAAf,CAAX;AAIA,WAAOZ,KAAK,CAACgB,IAAN,CAAWd,OAAO,GAAG,gCAArB,EAAuDW,IAAvD,EAA6D;AAAEN,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA7D,CAAP;AACH;;AACDoB,EAAAA,YAAY,CAACF,MAAD,EAAQP,QAAR,EAAiBU,IAAjB,EAAsBC,OAAtB,EAA8BC,OAA9B,EAAsC;AAC9C,UAAMX,IAAI,GAACC,IAAI,CAACC,SAAL,CAAe;AACtB,gBAASI,MADa;AAEtB,kBAAWP,QAFW;AAGtB,iBAAUW,OAHY;AAItB,mBAAYE;AAJU,KAAf,CAAX;AAMA,WAAOzB,KAAK,CAACgB,IAAN,CAAWd,OAAO,GAAG,QAArB,EAA+BW,IAA/B,EAAqC;AAAEN,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAArC,CAAP;AACH;;AAjDa;;AAoDlB,eAAe,IAAIE,WAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://localhost:5000/api/';\r\n\r\nclass UserService {\r\n    getPublicContent() {\r\n        return axios.get(API_URL + 'test/all')\r\n    }\r\n\r\n    getUserBoard() {\r\n        return axios.get(API_URL + 'test/user', { headers: authHeader() });\r\n    }\r\n\r\n    getFacilitatorBoard() {\r\n        return axios.get(API_URL + 'test/facilitator', { headers: authHeader() });\r\n    }\r\n\r\n    getAdminBoard() {\r\n        return axios.get(API_URL + 'test/admin', { headers: authHeader() });\r\n    }\r\n    getBusinessCourses(){\r\n        return axios.get(API_URL + 'business/viewCourses', { headers: authHeader() });\r\n    }\r\n    getBusinessOneCourse(courseId){\r\n        const data=JSON.stringify({\r\n            \"courseId\":courseId\r\n        });\r\n        return axios.post(API_URL + 'business/viewOneCourse', data, { headers: authHeader() });\r\n    }\r\n    getBusinessAccounts(){\r\n        return axios.get(API_URL + 'admin/getBusinessAccounts', { headers: authHeader() });\r\n    }\r\n    getBusinessCoursesInAdminPage(userId){\r\n        const data=JSON.stringify({\r\n            \"userId\":userId\r\n        });\r\n        return axios.post(API_URL + 'admin/viewCoursesInAdminPage', data, { headers: authHeader() });\r\n    }\r\n    getBusinessOneCourseInAdminPage(userId,courseId){\r\n        const data=JSON.stringify({\r\n            \"userId\":userId,\r\n            \"courseId\":courseId\r\n        });\r\n        return axios.post(API_URL + 'admin/viewOneCourseInAdminPage', data, { headers: authHeader() });\r\n    }\r\n    enrollCourse(userId,courseId,cost,payerId,orderId){\r\n        const data=JSON.stringify({\r\n            \"userId\":userId,\r\n            \"courseId\":courseId,\r\n            \"payerId\":payerId,\r\n            \"paymentId\":paymentId,\r\n        });\r\n        return axios.post(API_URL + 'enroll', data, { headers: authHeader() });\r\n    }\r\n}\r\n\r\nexport default new UserService();"]},"metadata":{},"sourceType":"module"}