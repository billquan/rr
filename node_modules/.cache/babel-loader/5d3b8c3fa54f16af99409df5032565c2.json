{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bill Quan\\\\Desktop\\\\fit3171\\\\fit4002\\\\rr\\\\src\\\\Components\\\\PaypalButton.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport scriptLoader from \"react-async-script-loader\";\nimport UserService from \"../services/user.service\";\nimport AuthService from \"../services/auth.service\";\nconst CLIENT = {\n  sandbox: \"AbbtfecBeODkTGclTYhScc1J_MrroFd1g6XJ0gRGwoHXY-Lef2GmgiRaRtgeIISolOCCfB6XmqDAzQHB\",\n  production: \"your_production_key\"\n};\nconst CLIENT_ID = process.env.NODE_ENV === \"production\" ? CLIENT.production : CLIENT.sandbox;\nconst CURRENCY = \"AUD\";\nlet PayPalButton = null;\n\nclass PaypalButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createOrder = (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          description: this.props.title,\n          amount: {\n            currency_code: \"AUD\",\n            value: this.props.cost\n          }\n        }]\n      });\n    };\n\n    this.onApprove = (data, actions) => {\n      actions.order.capture().then(details => {\n        const paymentData = {\n          payerID: data.payerID,\n          orderID: data.orderID\n        };\n        console.log(\"Payment Approved: \", paymentData);\n        UserService.enrollCourse(AuthService.getCurrentUser().id, this.props.courseId, this.props.cost, data.payerID, data.orderID).then(response => {\n          if (response.data.status === \"completed\") {\n            this.setState({\n              showButtons: false,\n              paid: true,\n              failed: false\n            });\n          } else if (response.data.status === \"unsuccessful\") {\n            this.setState({\n              showButtons: false,\n              paid: false,\n              failed: true\n            });\n          } else {\n            this.setState({\n              showButtons: false,\n              error: true\n            });\n          }\n\n          console.log(response.data);\n        }).catch(error => {\n          console.log(error);\n        });\n      });\n    };\n\n    this.state = {\n      showButtons: false,\n      failed: false,\n      paid: false,\n      error: false\n    };\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n  }\n\n  componentDidMount() {\n    const {\n      isScriptLoaded,\n      isScriptLoadSucceed\n    } = this.props;\n\n    if (isScriptLoaded && isScriptLoadSucceed) {\n      PayPalButton = window.paypal.Buttons.driver(\"react\", {\n        React,\n        ReactDOM\n      });\n      this.setState({\n        showButtons: true\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      isScriptLoaded,\n      isScriptLoadSucceed\n    } = nextProps;\n    const scriptJustLoaded = !this.state.showButtons && !this.props.isScriptLoaded && isScriptLoaded;\n\n    if (scriptJustLoaded) {\n      if (isScriptLoadSucceed) {\n        PayPalButton = window.paypal.Buttons.driver(\"react\", {\n          React,\n          ReactDOM\n        });\n        this.setState({\n          showButtons: true\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      showButtons,\n      paid,\n      failed,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, showButtons && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Course: \", this.props.title), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"Cost\\uFF1A \", this.props.cost, \" AUD\")), /*#__PURE__*/React.createElement(PayPalButton, {\n      createOrder: (data, actions) => this.createOrder(data, actions),\n      onApprove: (data, actions) => this.onApprove(data, actions),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    })), paid && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Happy picture here\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"Congrats! you are now enrolled in  \", this.props.title, \" \")), failed && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Sad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, \"Sorry, your payment seems to be failed. Please try again.\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }\n    }, \"If you meet any problem, please contact admins.\")));\n  }\n\n}\n\nexport default scriptLoader(`https://www.paypal.com/sdk/js?client-id=${CLIENT_ID}&currency=${CURRENCY}`)(PaypalButton);","map":{"version":3,"sources":["C:/Users/Bill Quan/Desktop/fit3171/fit4002/rr/src/Components/PaypalButton.js"],"names":["React","ReactDOM","scriptLoader","UserService","AuthService","CLIENT","sandbox","production","CLIENT_ID","process","env","NODE_ENV","CURRENCY","PayPalButton","PaypalButton","Component","constructor","props","createOrder","data","actions","order","create","purchase_units","description","title","amount","currency_code","value","cost","onApprove","capture","then","details","paymentData","payerID","orderID","console","log","enrollCourse","getCurrentUser","id","courseId","response","status","setState","showButtons","paid","failed","error","catch","state","window","componentDidMount","isScriptLoaded","isScriptLoadSucceed","paypal","Buttons","driver","componentWillReceiveProps","nextProps","scriptJustLoaded","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACC,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EACL,kFAFW;AAGbC,EAAAA,UAAU,EACR;AAJW,CAAf;AAOA,MAAMC,SAAS,GACbC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,MAAM,CAACE,UAA/C,GAA4DF,MAAM,CAACC,OADrE;AAEA,MAAMM,QAAQ,GAAG,KAAjB;AAED,IAAIC,YAAY,GAAG,IAAnB;;AACA,MAAMC,YAAN,SAA2Bd,KAAK,CAACe,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuCnBC,WAvCmB,GAuCL,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAE/B,aAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;AAC1BC,QAAAA,cAAc,EAAE,CACd;AACEC,UAAAA,WAAW,EAAE,KAAKP,KAAL,CAAWQ,KAD1B;AAEEC,UAAAA,MAAM,EAAE;AACNC,YAAAA,aAAa,EAAE,KADT;AAENC,YAAAA,KAAK,EAAE,KAAKX,KAAL,CAAWY;AAFZ;AAFV,SADc;AADU,OAArB,CAAP;AAWD,KApDkB;;AAAA,SAsDnBC,SAtDmB,GAsDP,CAACX,IAAD,EAAOC,OAAP,KAAmB;AAE7BA,MAAAA,OAAO,CAACC,KAAR,CAAcU,OAAd,GAAwBC,IAAxB,CAA6BC,OAAO,IAAI;AACtC,cAAMC,WAAW,GAAG;AAClBC,UAAAA,OAAO,EAAEhB,IAAI,CAACgB,OADI;AAElBC,UAAAA,OAAO,EAAEjB,IAAI,CAACiB;AAFI,SAApB;AAIAC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,WAAlC;AACA/B,QAAAA,WAAW,CAACoC,YAAZ,CAAyBnC,WAAW,CAACoC,cAAZ,GAA6BC,EAAtD,EAAyD,KAAKxB,KAAL,CAAWyB,QAApE,EAA6E,KAAKzB,KAAL,CAAWY,IAAxF,EAA6FV,IAAI,CAACgB,OAAlG,EAA0GhB,IAAI,CAACiB,OAA/G,EAAwHJ,IAAxH,CACIW,QAAQ,IAAI;AACV,cAAIA,QAAQ,CAACxB,IAAT,CAAcyB,MAAd,KAAyB,WAA7B,EAAyC;AACvC,iBAAKC,QAAL,CAAc;AAAEC,cAAAA,WAAW,EAAE,KAAf;AAAsBC,cAAAA,IAAI,EAAE,IAA5B;AAAkCC,cAAAA,MAAM,EAAE;AAA1C,aAAd;AACD,WAFD,MAEM,IAAIL,QAAQ,CAACxB,IAAT,CAAcyB,MAAd,KAAyB,cAA7B,EAA4C;AAChD,iBAAKC,QAAL,CAAc;AAAEC,cAAAA,WAAW,EAAE,KAAf;AAAsBC,cAAAA,IAAI,EAAE,KAA5B;AAAmCC,cAAAA,MAAM,EAAE;AAA3C,aAAd;AACD,WAFK,MAED;AACH,iBAAKH,QAAL,CAAc;AAAEC,cAAAA,WAAW,EAAE,KAAf;AAAsBG,cAAAA,KAAK,EAAC;AAA5B,aAAd;AACD;;AACDZ,UAAAA,OAAO,CAACC,GAAR,CAAYK,QAAQ,CAACxB,IAArB;AACD,SAVL,EAWE+B,KAXF,CAWSD,KAAD,IAAW;AACjBZ,UAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACD,SAbD;AAcD,OApBD;AAqBD,KA7EkB;;AAGjB,SAAKE,KAAL,GAAa;AACXL,MAAAA,WAAW,EAAE,KADF;AAEXE,MAAAA,MAAM,EAAE,KAFG;AAGXD,MAAAA,IAAI,EAAE,KAHK;AAIXE,MAAAA,KAAK,EAAE;AAJI,KAAb;AAOAG,IAAAA,MAAM,CAACpD,KAAP,GAAeA,KAAf;AACAoD,IAAAA,MAAM,CAACnD,QAAP,GAAkBA,QAAlB;AACD;;AAEDoD,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAA0C,KAAKtC,KAArD;;AAEA,QAAIqC,cAAc,IAAIC,mBAAtB,EAA2C;AACzC1C,MAAAA,YAAY,GAAGuC,MAAM,CAACI,MAAP,CAAcC,OAAd,CAAsBC,MAAtB,CAA6B,OAA7B,EAAsC;AAAE1D,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAtC,CAAf;AACA,WAAK4C,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD;AACF;;AAEDa,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,UAAM;AAAEN,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAA0CK,SAAhD;AAEA,UAAMC,gBAAgB,GACpB,CAAC,KAAKV,KAAL,CAAWL,WAAZ,IAA2B,CAAC,KAAK7B,KAAL,CAAWqC,cAAvC,IAAyDA,cAD3D;;AAGA,QAAIO,gBAAJ,EAAsB;AACpB,UAAIN,mBAAJ,EAAyB;AACvB1C,QAAAA,YAAY,GAAGuC,MAAM,CAACI,MAAP,CAAcC,OAAd,CAAsBC,MAAtB,CAA6B,OAA7B,EAAsC;AACnD1D,UAAAA,KADmD;AAEnDC,UAAAA;AAFmD,SAAtC,CAAf;AAIA,aAAK4C,QAAL,CAAc;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAd;AACD;AACF;AACF;;AAyCDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,WAAF;AAAcC,MAAAA,IAAd;AAAoBC,MAAAA,MAApB;AAA6BC,MAAAA;AAA7B,QAAsC,KAAKE,KAAjD;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,WAAW,iBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa,KAAK7B,KAAL,CAAWQ,KAAxB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAW,KAAKR,KAAL,CAAWY,IAAtB,SAFF,CADF,eAME,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,CAACV,IAAD,EAAOC,OAAP,KAAmB,KAAKF,WAAL,CAAiBC,IAAjB,EAAuBC,OAAvB,CADlC;AAEE,MAAA,SAAS,EAAE,CAACD,IAAD,EAAOC,OAAP,KAAmB,KAAKU,SAAL,CAAeX,IAAf,EAAqBC,OAArB,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAFJ,EAeG2B,IAAI,iBACH;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACgC,KAAK9B,KAAL,CAAWQ,KAD3C,EACkD,GADlD,CAFF,CAhBJ,EAyBDuB,MAAM,iBACP;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAFJ,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDALA,CA1BE,CADF;AAwCD;;AA3HwC;;AA+H1C,eAAe9C,YAAY,CAAE,2CAA0CM,SAAU,aAAYI,QAAS,EAA3E,CAAZ,CAA0FE,YAA1F,CAAf","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport scriptLoader from \"react-async-script-loader\";\r\nimport UserService from \"../services/user.service\";\r\nimport AuthService from \"../services/auth.service\";\r\n const CLIENT = {\r\n   sandbox:\r\n     \"AbbtfecBeODkTGclTYhScc1J_MrroFd1g6XJ0gRGwoHXY-Lef2GmgiRaRtgeIISolOCCfB6XmqDAzQHB\",\r\n   production:\r\n     \"your_production_key\"\r\n };\r\n\r\n const CLIENT_ID =\r\n   process.env.NODE_ENV === \"production\" ? CLIENT.production : CLIENT.sandbox;\r\n const CURRENCY = \"AUD\";\r\n\r\nlet PayPalButton = null;\r\nclass PaypalButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showButtons: false,\r\n      failed: false,\r\n      paid: false,\r\n      error: false\r\n    };\r\n\r\n    window.React = React;\r\n    window.ReactDOM = ReactDOM;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { isScriptLoaded, isScriptLoadSucceed } = this.props;\r\n\r\n    if (isScriptLoaded && isScriptLoadSucceed) {\r\n      PayPalButton = window.paypal.Buttons.driver(\"react\", { React, ReactDOM });\r\n      this.setState({ showButtons: true });\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { isScriptLoaded, isScriptLoadSucceed } = nextProps;\r\n\r\n    const scriptJustLoaded =\r\n      !this.state.showButtons && !this.props.isScriptLoaded && isScriptLoaded;\r\n\r\n    if (scriptJustLoaded) {\r\n      if (isScriptLoadSucceed) {\r\n        PayPalButton = window.paypal.Buttons.driver(\"react\", {\r\n          React,\r\n          ReactDOM\r\n        });\r\n        this.setState({ showButtons: true });\r\n      }\r\n    }\r\n  }\r\n  createOrder = (data, actions) => {\r\n\r\n    return actions.order.create({\r\n      purchase_units: [\r\n        {\r\n          description: this.props.title,\r\n          amount: {\r\n            currency_code: \"AUD\",\r\n            value: this.props.cost\r\n          }\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onApprove = (data, actions) => {\r\n\r\n    actions.order.capture().then(details => {\r\n      const paymentData = {\r\n        payerID: data.payerID,\r\n        orderID: data.orderID\r\n      };  \r\n      console.log(\"Payment Approved: \", paymentData);\r\n      UserService.enrollCourse(AuthService.getCurrentUser().id,this.props.courseId,this.props.cost,data.payerID,data.orderID).then(\r\n          response => {\r\n            if (response.data.status === \"completed\"){\r\n              this.setState({ showButtons: false, paid: true ,failed: false});\r\n            }else if (response.data.status === \"unsuccessful\"){\r\n              this.setState({ showButtons: false, paid: false ,failed: true});\r\n            }else{\r\n              this.setState({ showButtons: false, error:true});\r\n            }\r\n            console.log(response.data);\r\n          },\r\n      ).catch((error) => {\r\n        console.log(error);\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { showButtons,paid, failed , error} = this.state;\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        {showButtons && (\r\n          <div>\r\n            <div>\r\n              <h2>Course: {this.props.title}</h2>\r\n              <h2>Cost： {this.props.cost} AUD</h2>\r\n            </div>\r\n\r\n            <PayPalButton\r\n              createOrder={(data, actions) => this.createOrder(data, actions)}\r\n              onApprove={(data, actions) => this.onApprove(data, actions)}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {paid && (\r\n          <div className=\"main\">\r\n            <img alt=\"Happy picture here\"  />\r\n            <h2>\r\n        Congrats! you are now enrolled in  {this.props.title}{\" \"}\r\n\r\n            </h2>\r\n          </div>\r\n        )}\r\n\r\n    {failed && (\r\n    <div className=\"main\">\r\n        <img alt=\"Sad\"  />\r\n        <h2>\r\n        Sorry, your payment seems to be failed. Please try again.\r\n    </h2>\r\n    <h2>\r\n    If you meet any problem, please contact admins.\r\n    </h2>\r\n    </div>\r\n    )}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n export default scriptLoader(`https://www.paypal.com/sdk/js?client-id=${CLIENT_ID}&currency=${CURRENCY}`)(PaypalButton);\r\n\r\n"]},"metadata":{},"sourceType":"module"}