{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\nconst API_URL = 'https://signallingserver.us-east-2.elasticbeanstalk.com/api/business/';\n\nclass UserService {\n  getBusinessCourses() {\n    return axios.get(API_URL + 'viewCourses', {\n      headers: authHeader()\n    });\n  }\n\n  getBusinessOneCourse(courseId) {\n    const data = JSON.stringify({\n      \"courseId\": courseId\n    });\n    return axios.post(API_URL + 'viewOneCourse', data, {\n      headers: authHeader()\n    });\n  }\n\n  uploadCourse(genres, title, description, selectedFacilitator, startDate, endDate, startTime, endTime, selecteddays, selectedfrequency, address1, address2, city, state, zip, maxMembers, minMembers, id, cost) {\n    const data = JSON.stringify({\n      \"category\": genres,\n      \"title\": title,\n      \"description\": description,\n      \"facilitator\": selectedFacilitator,\n      \"startDate\": startDate,\n      \"endDate\": endDate,\n      \"startTime\": startTime,\n      \"endTime\": endTime,\n      \"repeatDay\": selecteddays,\n      \"frequency\": selectedfrequency,\n      \"location\": {\n        \"address1\": address1,\n        \"address2\": address2,\n        \"city\": city,\n        \"state\": state,\n        \"postCode\": zip\n      },\n      \"maxMembers\": maxMembers,\n      \"minMembers\": minMembers,\n      \"promoImage\": \"none\",\n      \"prerequisites\": \"none\",\n      \"additionalInformation\": \"none\",\n      \"businessId\": id,\n      \"cost\": cost\n    });\n    const header = {\n      headers: authHeader()\n    };\n    return axios.post(API_URL + 'uploadCourse', data, header);\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["C:/Users/Bill Quan/Desktop/fit3171/fit4002/demo/src/services/business.service.js"],"names":["axios","authHeader","API_URL","UserService","getBusinessCourses","get","headers","getBusinessOneCourse","courseId","data","JSON","stringify","post","uploadCourse","genres","title","description","selectedFacilitator","startDate","endDate","startTime","endTime","selecteddays","selectedfrequency","address1","address2","city","state","zip","maxMembers","minMembers","id","cost","header"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,OAAO,GAAG,uEAAhB;;AAEA,MAAMC,WAAN,CAAkB;AAEdC,EAAAA,kBAAkB,GAAE;AAChB,WAAOJ,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,aAApB,EAAmC;AAAEI,MAAAA,OAAO,EAAEL,UAAU;AAArB,KAAnC,CAAP;AACH;;AACDM,EAAAA,oBAAoB,CAACC,QAAD,EAAU;AAC1B,UAAMC,IAAI,GAACC,IAAI,CAACC,SAAL,CAAe;AACtB,kBAAWH;AADW,KAAf,CAAX;AAGA,WAAOR,KAAK,CAACY,IAAN,CAAWV,OAAO,GAAG,eAArB,EAAsCO,IAAtC,EAA4C;AAAEH,MAAAA,OAAO,EAAEL,UAAU;AAArB,KAA5C,CAAP;AACH;;AACDY,EAAAA,YAAY,CAACC,MAAD,EAAQC,KAAR,EAAcC,WAAd,EAA0BC,mBAA1B,EAA8CC,SAA9C,EAAwDC,OAAxD,EAAgEC,SAAhE,EAA0EC,OAA1E,EAAkFC,YAAlF,EAA+FC,iBAA/F,EAAiHC,QAAjH,EAA0HC,QAA1H,EAAmIC,IAAnI,EAAwIC,KAAxI,EAA8IC,GAA9I,EAAkJC,UAAlJ,EAA6JC,UAA7J,EAAwKC,EAAxK,EAA2KC,IAA3K,EAAiL;AAEzL,UAAMvB,IAAI,GAAEC,IAAI,CAACC,SAAL,CAAe;AACvB,kBAAYG,MADW;AAEvB,eAASC,KAFc;AAGvB,qBAAeC,WAHQ;AAIvB,qBAAeC,mBAJQ;AAKvB,mBAAYC,SALW;AAMvB,iBAAUC,OANa;AAOvB,mBAAYC,SAPW;AAQvB,iBAAUC,OARa;AASvB,mBAAYC,YATW;AAUvB,mBAAYC,iBAVW;AAYvB,kBAAW;AACP,oBAAWC,QADJ;AAEP,oBAAWC,QAFJ;AAGP,gBAAOC,IAHA;AAIP,iBAAQC,KAJD;AAKP,oBAAWC;AALJ,OAZY;AAmBvB,oBAAaC,UAnBU;AAoBvB,oBAAaC,UApBU;AAqBvB,oBAAa,MArBU;AAsBvB,uBAAgB,MAtBO;AAuBvB,+BAAwB,MAvBD;AAwBvB,oBAAaC,EAxBU;AAyBvB,cAAOC;AAzBgB,KAAf,CAAZ;AA6BA,UAAMC,MAAM,GAAC;AAAE3B,MAAAA,OAAO,EAAEL,UAAU;AAArB,KAAb;AAEA,WAAOD,KAAK,CAACY,IAAN,CAAWV,OAAO,GAAC,cAAnB,EACHO,IADG,EAEHwB,MAFG,CAAP;AAIH;;AAhDa;;AAoDlB,eAAe,IAAI9B,WAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://signallingserver.us-east-2.elasticbeanstalk.com/api/business/';\r\n\r\nclass UserService {\r\n\r\n    getBusinessCourses(){\r\n        return axios.get(API_URL + 'viewCourses', { headers: authHeader() });\r\n    }\r\n    getBusinessOneCourse(courseId){\r\n        const data=JSON.stringify({\r\n            \"courseId\":courseId\r\n        });\r\n        return axios.post(API_URL + 'viewOneCourse', data, { headers: authHeader() });\r\n    }\r\n    uploadCourse(genres,title,description,selectedFacilitator,startDate,endDate,startTime,endTime,selecteddays,selectedfrequency,address1,address2,city,state,zip,maxMembers,minMembers,id,cost) {\r\n\r\n        const data =JSON.stringify({\r\n            \"category\": genres,\r\n            \"title\": title,\r\n            \"description\": description,\r\n            \"facilitator\": selectedFacilitator,\r\n            \"startDate\":startDate,\r\n            \"endDate\":endDate,\r\n            \"startTime\":startTime,\r\n            \"endTime\":endTime,\r\n            \"repeatDay\":selecteddays,\r\n            \"frequency\":selectedfrequency,\r\n\r\n            \"location\":{\r\n                \"address1\":address1,\r\n                \"address2\":address2,\r\n                \"city\":city,\r\n                \"state\":state,\r\n                \"postCode\":zip,\r\n            },\r\n            \"maxMembers\":maxMembers,\r\n            \"minMembers\":minMembers,\r\n            \"promoImage\":\"none\",\r\n            \"prerequisites\":\"none\",\r\n            \"additionalInformation\":\"none\",\r\n            \"businessId\":id,\r\n            \"cost\":cost\r\n\r\n        });\r\n\r\n        const header={ headers: authHeader()};\r\n\r\n        return axios.post(API_URL+'uploadCourse',\r\n            data,\r\n            header\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default new UserService();"]},"metadata":{},"sourceType":"module"}