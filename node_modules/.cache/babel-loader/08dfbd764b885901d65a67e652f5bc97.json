{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPostalCode;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // common patterns\n\n\nvar threeDigit = /^\\d{3}$/;\nvar fourDigit = /^\\d{4}$/;\nvar fiveDigit = /^\\d{5}$/;\nvar sixDigit = /^\\d{6}$/;\nvar patterns = {\n  AD: /^AD\\d{3}$/,\n  AT: fourDigit,\n  AU: fourDigit,\n  BE: fourDigit,\n  BG: fourDigit,\n  BR: /^\\d{5}-\\d{3}$/,\n  CA: /^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][\\s\\-]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i,\n  CH: fourDigit,\n  CZ: /^\\d{3}\\s?\\d{2}$/,\n  DE: fiveDigit,\n  DK: fourDigit,\n  DZ: fiveDigit,\n  EE: fiveDigit,\n  ES: fiveDigit,\n  FI: fiveDigit,\n  FR: /^\\d{2}\\s?\\d{3}$/,\n  GB: /^(gir\\s?0aa|[a-z]{1,2}\\d[\\da-z]?\\s?(\\d[a-z]{2})?)$/i,\n  GR: /^\\d{3}\\s?\\d{2}$/,\n  HR: /^([1-5]\\d{4}$)/,\n  HU: fourDigit,\n  ID: fiveDigit,\n  IE: /^(?!.*(?:o))[A-z]\\d[\\dw]\\s\\w{4}$/i,\n  IL: fiveDigit,\n  IN: /^((?!10|29|35|54|55|65|66|86|87|88|89)[1-9][0-9]{5})$/,\n  IS: threeDigit,\n  IT: fiveDigit,\n  JP: /^\\d{3}\\-\\d{4}$/,\n  KE: fiveDigit,\n  LI: /^(948[5-9]|949[0-7])$/,\n  LT: /^LT\\-\\d{5}$/,\n  LU: fourDigit,\n  LV: /^LV\\-\\d{4}$/,\n  MX: fiveDigit,\n  MT: /^[A-Za-z]{3}\\s{0,1}\\d{4}$/,\n  NL: /^\\d{4}\\s?[a-z]{2}$/i,\n  NO: fourDigit,\n  NP: /^(10|21|22|32|33|34|44|45|56|57)\\d{3}$|^(977)$/i,\n  NZ: fourDigit,\n  PL: /^\\d{2}\\-\\d{3}$/,\n  PR: /^00[679]\\d{2}([ -]\\d{4})?$/,\n  PT: /^\\d{4}\\-\\d{3}?$/,\n  RO: sixDigit,\n  RU: sixDigit,\n  SA: fiveDigit,\n  SE: /^[1-9]\\d{2}\\s?\\d{2}$/,\n  SI: fourDigit,\n  SK: /^\\d{3}\\s?\\d{2}$/,\n  TN: fourDigit,\n  TW: /^\\d{3}(\\d{2})?$/,\n  UA: fiveDigit,\n  US: /^\\d{5}(-\\d{4})?$/,\n  ZA: fourDigit,\n  ZM: fiveDigit\n};\nvar locales = Object.keys(patterns);\nexports.locales = locales;\n\nfunction isPostalCode(str, locale) {\n  (0, _assertString.default)(str);\n\n  if (locale in patterns) {\n    return patterns[locale].test(str);\n  } else if (locale === 'any') {\n    for (var key in patterns) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (patterns.hasOwnProperty(key)) {\n        var pattern = patterns[key];\n\n        if (pattern.test(str)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}","map":{"version":3,"sources":["C:/Users/Bill Quan/Desktop/fit3171/fit4002/rr/node_modules/validator/lib/isPostalCode.js"],"names":["Object","defineProperty","exports","value","default","isPostalCode","locales","_assertString","_interopRequireDefault","require","obj","__esModule","threeDigit","fourDigit","fiveDigit","sixDigit","patterns","AD","AT","AU","BE","BG","BR","CA","CH","CZ","DE","DK","DZ","EE","ES","FI","FR","GB","GR","HR","HU","ID","IE","IL","IN","IS","IT","JP","KE","LI","LT","LU","LV","MX","MT","NL","NO","NP","NZ","PL","PR","PT","RO","RU","SA","SE","SI","SK","TN","TW","UA","US","ZA","ZM","keys","str","locale","test","key","hasOwnProperty","pattern","Error","concat"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isPostalCode;\r\nexports.locales = void 0;\r\n\r\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n// common patterns\r\nvar threeDigit = /^\\d{3}$/;\r\nvar fourDigit = /^\\d{4}$/;\r\nvar fiveDigit = /^\\d{5}$/;\r\nvar sixDigit = /^\\d{6}$/;\r\nvar patterns = {\r\n  AD: /^AD\\d{3}$/,\r\n  AT: fourDigit,\r\n  AU: fourDigit,\r\n  BE: fourDigit,\r\n  BG: fourDigit,\r\n  BR: /^\\d{5}-\\d{3}$/,\r\n  CA: /^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][\\s\\-]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i,\r\n  CH: fourDigit,\r\n  CZ: /^\\d{3}\\s?\\d{2}$/,\r\n  DE: fiveDigit,\r\n  DK: fourDigit,\r\n  DZ: fiveDigit,\r\n  EE: fiveDigit,\r\n  ES: fiveDigit,\r\n  FI: fiveDigit,\r\n  FR: /^\\d{2}\\s?\\d{3}$/,\r\n  GB: /^(gir\\s?0aa|[a-z]{1,2}\\d[\\da-z]?\\s?(\\d[a-z]{2})?)$/i,\r\n  GR: /^\\d{3}\\s?\\d{2}$/,\r\n  HR: /^([1-5]\\d{4}$)/,\r\n  HU: fourDigit,\r\n  ID: fiveDigit,\r\n  IE: /^(?!.*(?:o))[A-z]\\d[\\dw]\\s\\w{4}$/i,\r\n  IL: fiveDigit,\r\n  IN: /^((?!10|29|35|54|55|65|66|86|87|88|89)[1-9][0-9]{5})$/,\r\n  IS: threeDigit,\r\n  IT: fiveDigit,\r\n  JP: /^\\d{3}\\-\\d{4}$/,\r\n  KE: fiveDigit,\r\n  LI: /^(948[5-9]|949[0-7])$/,\r\n  LT: /^LT\\-\\d{5}$/,\r\n  LU: fourDigit,\r\n  LV: /^LV\\-\\d{4}$/,\r\n  MX: fiveDigit,\r\n  MT: /^[A-Za-z]{3}\\s{0,1}\\d{4}$/,\r\n  NL: /^\\d{4}\\s?[a-z]{2}$/i,\r\n  NO: fourDigit,\r\n  NP: /^(10|21|22|32|33|34|44|45|56|57)\\d{3}$|^(977)$/i,\r\n  NZ: fourDigit,\r\n  PL: /^\\d{2}\\-\\d{3}$/,\r\n  PR: /^00[679]\\d{2}([ -]\\d{4})?$/,\r\n  PT: /^\\d{4}\\-\\d{3}?$/,\r\n  RO: sixDigit,\r\n  RU: sixDigit,\r\n  SA: fiveDigit,\r\n  SE: /^[1-9]\\d{2}\\s?\\d{2}$/,\r\n  SI: fourDigit,\r\n  SK: /^\\d{3}\\s?\\d{2}$/,\r\n  TN: fourDigit,\r\n  TW: /^\\d{3}(\\d{2})?$/,\r\n  UA: fiveDigit,\r\n  US: /^\\d{5}(-\\d{4})?$/,\r\n  ZA: fourDigit,\r\n  ZM: fiveDigit\r\n};\r\nvar locales = Object.keys(patterns);\r\nexports.locales = locales;\r\n\r\nfunction isPostalCode(str, locale) {\r\n  (0, _assertString.default)(str);\r\n\r\n  if (locale in patterns) {\r\n    return patterns[locale].test(str);\r\n  } else if (locale === 'any') {\r\n    for (var key in patterns) {\r\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\r\n      // istanbul ignore else\r\n      if (patterns.hasOwnProperty(key)) {\r\n        var pattern = patterns[key];\r\n\r\n        if (pattern.test(str)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\r\n}"]},"metadata":{},"sourceType":"script"}