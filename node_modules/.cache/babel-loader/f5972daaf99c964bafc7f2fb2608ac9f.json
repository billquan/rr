{"ast":null,"code":"var _jsxFileName = \"/Users/jiahaoyu/Desktop/4002/src/Components/register.component.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, \"This field is required!\");\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"This is not a valid email.\");\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"The username must be between 3 and 20 characters.\");\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"The password must be between 6 and 40 characters.\");\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(this.state.username, this.state.email, this.state.password).then(response => {\n        this.setState({\n          message: response.data.message,\n          successful: true\n        });\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n      alt: \"profile-img\",\n      className: \"profile-img-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleRegister,\n      ref: c => {\n        this.form = c;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, !this.state.successful && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.onChangeUsername,\n      validations: [required, vusername],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onChangeEmail,\n      validations: [required, email],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      validations: [required, vpassword],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, \"Sign Up\"))), this.state.message && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, this.state.message)), /*#__PURE__*/React.createElement(CheckButton, {\n      style: {\n        display: \"none\"\n      },\n      ref: c => {\n        this.checkBtn = c;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 5\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jiahaoyu/Desktop/4002/src/Components/register.component.js"],"names":["React","Component","Form","Input","CheckButton","isEmail","AuthService","required","value","email","vusername","length","vpassword","Register","constructor","props","handleRegister","bind","onChangeUsername","onChangeEmail","onChangePassword","state","username","password","successful","message","e","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","register","then","response","data","error","resMessage","toString","render","c","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n            This field is required!\n        </div>\n    );\n    }\n};\n\nconst email = value => {\n    if (!isEmail(value)) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n            This is not a valid email.\n        </div>\n    );\n    }\n};\n\nconst vusername = value => {\n    if (value.length < 3 || value.length > 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n            The username must be between 3 and 20 characters.\n        </div>\n    );\n    }\n};\n\nconst vpassword = value => {\n    if (value.length < 6 || value.length > 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n            The password must be between 6 and 40 characters.\n        </div>\n    );\n    }\n};\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            successful: false,\n            message: \"\"\n        };\n    }\n\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleRegister(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            successful: false\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            AuthService.register(\n                this.state.username,\n                this.state.email,\n                this.state.password,\n            ).then(\n                response => {\n                    this.setState({\n                        message: response.data.message,\n                        successful: true\n                    });\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        successful: false,\n                        message: resMessage\n                    });\n                }\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n            <img\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n        alt=\"profile-img\"\n        className=\"profile-img-card\"\n            />\n\n            <Form\n        onSubmit={this.handleRegister}\n        ref={c => {\n            this.form = c;\n        }}\n    >\n        {!this.state.successful && (\n        <div>\n        <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <Input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.onChangeUsername}\n            validations={[required, vusername]}\n            />\n            </div>\n\n            <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <Input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.onChangeEmail}\n            validations={[required, email]}\n            />\n            </div>\n\n            <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <Input\n            type=\"password\"\n            className=\"form-control\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.onChangePassword}\n            validations={[required, vpassword]}\n            />\n            </div>\n\n            <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\">Sign Up</button>\n        </div>\n        </div>\n        )}\n\n        {this.state.message && (\n        <div className=\"form-group\">\n            <div\n            className={\n                this.state.successful\n                    ? \"alert alert-success\"\n                    : \"alert alert-danger\"\n            }\n            role=\"alert\"\n                >\n                {this.state.message}\n                </div>\n                </div>\n        )}\n    <CheckButton\n        style={{ display: \"none\" }}\n        ref={c => {\n            this.checkBtn = c;\n        }}\n        />\n        </Form>\n        </div>\n        </div>\n    );\n    }\n}"]},"metadata":{},"sourceType":"module"}